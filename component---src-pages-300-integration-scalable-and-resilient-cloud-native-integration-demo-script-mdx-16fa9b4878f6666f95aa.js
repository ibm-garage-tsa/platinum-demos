(window.webpackJsonp=window.webpackJsonp||[]).push([[56,33,75],{"013z":function(e,t,a){"use strict";var n=a("q1tI"),r=a.n(n),i=a("NmYn"),b=a.n(i),l=a("Wbzz"),o=a("Xrax"),c=a("k4MR"),s=a("TSYQ"),d=a.n(s),m=a("QH2O"),p=a.n(m),h=a("qKvR"),u=function(e){var t,a=e.title,n=e.theme,r=e.tabs,i=void 0===r?[]:r;return Object(h.b)("div",{className:d()(p.a.pageHeader,(t={},t[p.a.withTabs]=i.length,t[p.a.darkMode]="dark"===n,t))},Object(h.b)("div",{className:"bx--grid"},Object(h.b)("div",{className:"bx--row"},Object(h.b)("div",{className:"bx--col-lg-12"},Object(h.b)("h1",{id:"page-title",className:p.a.text},a)))))},g=a("BAC9"),O=function(e){var t=e.relativePagePath,a=e.repository,n=Object(l.useStaticQuery)("1364590287").site.siteMetadata.repository,r=a||n,i=r.baseUrl,b=r.subDirectory,o=i+"/edit/"+r.branch+b+"/src/pages"+t;return i?Object(h.b)("div",{className:"bx--row "+g.row},Object(h.b)("div",{className:"bx--col"},Object(h.b)("a",{className:g.link,href:o},"Edit this page on GitHub"))):null},j=a("FCXl"),f=a("dI71"),N=a("I8xM"),w=function(e){function t(){return e.apply(this,arguments)||this}return Object(f.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,n=e.slug,r=n.split("/").filter(Boolean).slice(-1)[0],i=a.map((function(e){var t,a=b()(e,{lower:!0,strict:!0}),i=a===r,o=new RegExp(r+"/?(#.*)?$"),c=n.replace(o,a);return Object(h.b)("li",{key:e,className:d()((t={},t[N.selectedItem]=i,t),N.listItem)},Object(h.b)(l.Link,{className:N.link,to:""+c},e))}));return Object(h.b)("div",{className:N.tabsContainer},Object(h.b)("div",{className:"bx--grid"},Object(h.b)("div",{className:"bx--row"},Object(h.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(h.b)("nav",{"aria-label":t},Object(h.b)("ul",{className:N.list},i))))))},t}(r.a.Component),y=a("MjG9"),v=a("CzIb"),T=a("Asxa"),k=a("OIbQ"),x=a.n(k),A=function(e){var t=e.date,a=new Date(t);return t?Object(h.b)(T.c,{className:x.a.row},Object(h.b)(T.a,null,Object(h.b)("div",{className:x.a.text},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,a=e.children,n=e.location,r=e.Title,i=t.frontmatter,s=void 0===i?{}:i,d=t.relativePagePath,m=t.titleType,p=s.tabs,g=s.title,f=s.theme,N=s.description,T=s.keywords,k=s.date,x=Object(v.a)().interiorTheme,M=Object(l.useStaticQuery)("2456312558").site.pathPrefix,q=M?n.pathname.replace(M,""):n.pathname,Q=p?q.split("/").filter(Boolean).slice(-1)[0]||b()(p[0],{lower:!0}):"",I=f||x;return Object(h.b)(c.a,{tabs:p,homepage:!1,theme:I,pageTitle:g,pageDescription:N,pageKeywords:T,titleType:m},Object(h.b)(u,{title:r?Object(h.b)(r,null):g,label:"label",tabs:p,theme:I}),p&&Object(h.b)(w,{title:g,slug:q,tabs:p,currentTab:Q}),Object(h.b)(y.a,{padded:!0},a,Object(h.b)(O,{relativePagePath:d}),Object(h.b)(A,{date:k})),Object(h.b)(j.a,{pageContext:t,location:n,slug:q,tabs:p,currentTab:Q}),Object(h.b)(o.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},KpfO:function(e,t,a){"use strict";a.r(t),a.d(t,"Title",(function(){return c})),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return h}));var n,r=a("wx14"),i=a("zLVn"),b=(a("q1tI"),a("7ljp")),l=a("013z"),o=(a("qKvR"),["components"]),c=function(){return Object(b.b)("span",null,Object(b.b)("h1",{style:{fontSize:"60px"}},"Scalable and resilient cloud native integration",Object(b.b)("br",null)," 300-level live demo"))},s={},d=(n="InlineNotification",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(b.b)("div",e)}),m={Title:c,_frontmatter:s},p=l.a;function h(e){var t=e.components,a=Object(i.a)(e,o);return Object(b.b)(p,Object(r.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"![banner]","(BANNER IMAGE COMING)"),Object(b.b)("span",{id:"top"}),Object(b.b)("details",null,Object(b.b)("summary",null,"Introduction"),Object(b.b)("br",null),Object(b.b)("p",null,"Today we will see how Focus Bank maintains and enhances its cloud native integration. The bank recently implemented a new mobile application that requires access to the core banking system. This application and the integration it relies on were built using cloud native principles, allowing it to scale elastically and to be resilient to failure."),Object(b.b)("br",null),Object(b.b)("p",null,"We’ll see the behavior of the integration during a maintenance window in which IBM MQ and IBM App Connect are restarted. Then Focus Bank will release an upgrade to the application, increasing the product versions of IBM MQ and deploying new features for the application. Finally, Focus Bank will scale out the application to handle an expected increase in load, and we’ll see how this is transparent to the application."),Object(b.b)("br",null),Object(b.b)("p",null,"Let’s get started!"),Object(b.b)("br",null),Object(b.b)("p",null,"(Demo intro slides ",Object(b.b)("a",{href:"LINK COMING",target:"_blank",rel:"noreferrer"},"here"),")"),Object(b.b)("br",null),Object(b.b)("p",null,"(Printer-ready PDF of demo script ",Object(b.b)("a",{href:"PDF LINK TO COME",target:"_blank",rel:"noreferrer"},"here"),")")),Object(b.b)("details",null,Object(b.b)("summary",null,"1 - Ensuring continuous availability during a change to the integration solution"),Object(b.b)("br",null),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"1.1")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Understand the application integration flow")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"Focus Bank has implemented a mobile application for its customers, allowing them to complete their day-to-day banking needs. This requires access to the core banking system, and Focus Bank decided to implement a resilient and scalable cloud native integration. ",Object(b.b)("br",null),Object(b.b)("br",null),"The performance dashboard shows the end users’ mobile phone requesting operations against the core banking system (1). These mobile requests are distributed across three IBM App Connect runtimes (2), but this can be reduced and increased based on the load. The bank uses IBM MQ for internal connectivity (3). The App Connect runtimes transform the HTTP mobile app requests into MQ messages for the core banking system (4). Like App Connect, MQ also has multiple runtimes with the ability to scale the number of instances based on the demand. ",Object(b.b)("br",null),Object(b.b)("br",null),"The architecture has been deliberately created to allow calls to pass through any of the MQ instances to assure a loosely coupled topology. For complete resilience in the case of a failure, a different MQ instance can even be used for the request and response of a single interaction.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.1.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show the application dashboard, and walk through as outlined in the narration above. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-1-1-applications-dashboard.png",width:800}))))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"1.2")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Failover App Connect")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The infrastructure team is upgrading the worker nodes that run documents the application. This causes containers to be restarted as the upgrade ripples through the environment. Although it should not impact end users as each component of the solution is resilient to failure, the integration team wants to watch the real-time traffic as this is the first change since the application went live. ",Object(b.b)("br",null),Object(b.b)("br",null),"The App Connect and MQ graphs will change as the containers are deleted and re-started on another machine. The integration team expects to see the mobile app throughput graph remain constant throughout the upgrade. ",Object(b.b)("br",null),Object(b.b)("br",null),"We will simulate the worker node upgrade by deleting the running App Connect containers within the Red Hat OpenShift console.",Object(b.b)("br",null),Object(b.b)("br",null),"You will notice the throughput of one of the App Connect runtimes will drop to zero and then automatically recover.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Copy the identifier for the middle App Connect runtime. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-1-copy-identifier.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Change tabs to the Red Hat OpenShift console, navigate to ",Object(b.b)("strong",{parentName:"td"},"Workloads -> Pods")," (1), paste the identifier you copied in the prior step into the filter (2) and press enter. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-2-paste-identifier.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Click the overflow menu (1) and select ",Object(b.b)("strong",{parentName:"td"},"Delete Pod")," (2). ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-3-delete-pod.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.4"),Object(b.b)("td",{parentName:"tr",align:"left"},"Confirm the deletion by clicking ",Object(b.b)("strong",{parentName:"td"},"Delete"),".",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-4-confirm-delete.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The integration team notices the throughput dropping to zero on the App Connect runtime in the middle of the dashboard. The remaining two instances immediately take over the load. This is expected as the team designed the system with the assumption that the remaining two runtimes would be able to handle the load.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.5"),Object(b.b)("td",{parentName:"tr",align:"left"},"Return immediately to the application dashboard and show the throughput of the middle runtime has dropped to zero, while the other two have increased. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-5-application-dashboard.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"After a minute the team members see the identifier for the middle runtime change to the identity of the new container. They see traffic immediately being distributed across all three instances.",Object(b.b)("br",null),Object(b.b)("br",null),"They are happy to see the mobile app traffic continued to be processed during the failover.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.6"),Object(b.b)("td",{parentName:"tr",align:"left"},"Wait for the middle runtime’s name to change, and highlight that the traffic is automatically re-balanced.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(d,{mdxType:"InlineNotification"},"It’s common that the MQ traffic may be out of balance for a couple of seconds. This occurs while the connections from the new App Connect runtime are automatically rebalanced by MQ. "),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-6-traffic-rebalanced.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.7"),Object(b.b)("td",{parentName:"tr",align:"left"},"Highlight how the traffic is now fully re-balanced across all runtimes, while the mobile app throughput never changed.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-2-7-throughput-unchanged.png",width:800}))))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"1.3")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Failover MQ")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"Each MQ Queue Manager has been deployed using the Native HA feature. This means three containers, each on separate worker nodes, coordinate to provide a single logical Queue Manager with very high availability (HA). Each container has its own data store, but only one of these containers is the leader, with the remaining two as followers. The leader ensures the followers also receive a copy of all the messages. If the leader fails, a new leader is promoted within seconds. ",Object(b.b)("br",null),Object(b.b)("br",null)," To enable scaling, traffic from applications is spread evenly across queue managers grouped into a “uniform cluster”. In our case there are two such queue managers in the cluster, but more could be added as needed providing linear horizontal scalability.",Object(b.b)("br",null),Object(b.b)("br",null)," Let’s simulate the worker node upgrade by deleting the running MQ container within the Red Hat OpenShift console.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.3.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Change tabs to the Red Hat OpenShift console. Navigate to ",Object(b.b)("strong",{parentName:"td"},"Workloads -> Pods")," (1), type ",Object(b.b)("strong",{parentName:"td"},"ucqm2-")," into the filter (2) and press enter.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-3-1-press-enter.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.3.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Select the overflow menu (1) for the currently active container of the Native HA set (the one with ",Object(b.b)("strong",{parentName:"td"},"Ready")," state of ",Object(b.b)("strong",{parentName:"td"},"1/1"),") (1), and select ",Object(b.b)("strong",{parentName:"td"},"Delete Pod")," (3).",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-3-2-delete-pod.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.3.3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Confirm the deletion by clicking ",Object(b.b)("strong",{parentName:"td"},"Delete"),".",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-3-3-click-delete.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The team watches the traffic briefly drops for queue manager ucqm2. Then ucqm1 takes over the load before the load returns to ucqm2 once it has recovered as expected. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team members are happy to see the mobile app traffic continued to be processed at the same rate despite the failover.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 1.3.4"),Object(b.b)("td",{parentName:"tr",align:"left"},"Immediately return to the application dashboard, to see the decline in throughput for ucqm2, and the increase for ucqm1 (1). You are unlikely to see the throughput decline to zero as the MQ recovery is so rapid. Again, highlight that the mobile app traffic remains constant, with no message loss (2).",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/1-3-4-dashboard-decline.png",width:800}))))),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(b.b)("details",null,Object(b.b)("summary",null,"2 - Releasing a new version of the integration solution"),Object(b.b)("br",null),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"2.1")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Trigger a change from a source repository")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The mobile app team has requested a new feature that pushes a notification for each transaction, confirming the transaction has been successful. This involves sending a copy of the response message from the core banking system to the notification service. The team uses a feature in IBM MQ called streaming queues. They write a line of MQ configuration to stream messages to the notification queue. ",Object(b.b)("br",null),Object(b.b)("br",null),"A new version of IBM MQ was recently released and we are taking the opportunity to move to this release in the same time we update the mobile functionality. ",Object(b.b)("br",null),Object(b.b)("br",null),"The deployment of the application is automated using a pipeline technology called Tekton. Tekton is built into OpenShift, with all the deployment artefacts within GitHub as declarative configuration. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team historically implemented MQ configuration changes monthly, and MQ product version upgrades every 2 years. Implementing these changes through the pipeline allows them to be made in a repeatable way. The cloud native resilient design means changes can be applied without affecting the live traffic. This has transformed how the team operates and the speed they can work at. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team has a pipeline to deploy the solution that will be used to complete the updates. They use a ripple deployment to assure one queue manager is updated at a time, protecting the overall availability. ",Object(b.b)("br",null),Object(b.b)("br",null),"There are multiple ways the pipeline can be triggered. For instance, a change to the code within a GitHub repository can cause an event that triggers the pipeline. In our case we will simulate this triggering by clicking on the Deploy button within the application dashboard.",Object(b.b)("br",null),Object(b.b)("br",null),"This pulls a different GitHub branch which contains the updated artifacts and applies them to the environment.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.1.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"In a new browser tab, open the ",Object(b.b)("a",{href:"https://github.com/callumpjackson/cloud-native-integration/blob/notification/mq/uniformcluster/deploy/uniformclusterQMConfig.yaml_template",target:"_blank",rel:"noreferrer"},"code repository"),". Show the ",Object(b.b)("strong",{parentName:"td"},"alter")," line (1) that configures messages to be streamed from the existing response queue. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-1-1-alter-line.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.1.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show the updated version number for IBM MQ within ",Object(b.b)("a",{href:"https://github.com/callumpjackson/cloud-native-integration/blob/notification/mq/uniformcluster/deploy/uniformclusterQM1.yaml_template",target:"_blank",rel:"noreferrer"},"GitHub"),". ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-1-2-updated-version.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.1.3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Return to the application dashboard, scroll down, and click the ",Object(b.b)("strong",{parentName:"td"},"Deploy")," button. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-1-3-click-deploy.png",width:800}))))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"2.2")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Monitor the roll-out")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The team configures the pipeline to complete a rolling upgrade of the IBM MQ queue managers. As each queue manager is updated with the additional configuration of the streaming queue, mobile users will start to see notifications in their mobile application. The additional traffic will be visible in the dashboard via the notification service chart. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team can see the upgrade ripple through the queue managers, as the notification service starts to receive half the traffic and then all the traffic.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show the MQ version numbers in the application dashboard. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-1-version-numbers.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show how one queue manager is updated at a time, and one container at a time. As shown below, 1/3 once one of the containers has been updated. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-2-updating.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show the drop in traffic for ucqm1 when the final container is restarting, the connections are temporarily re-distributed to the other queue manager.",Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)(d,{mdxType:"InlineNotification"},"The dip in ucqm1 is due to the active queue manager container being updated. The peak in ucqm2 occurs during this dip as it automatically takes over the load.")," ",Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-3-drop-in-traffic.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.4"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show the ripple upgrade continues, and the mobile app traffic is unaffected.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-4-mobile-traffic-unaffected.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.5"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show that the notification service immediately starts to receive traffic. (annotation for both boxes?)",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-5-notification-service-traffic-starts.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.6"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show all the MQ queue managers have been successfully upgraded (1) and the environment is back to being balanced, with the mobile app traffic unaffected (2). ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-6-queue-managers-upgraded.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.7"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show the notification service traffic levels have increased. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/2-2-7-notification-service-traffic-increased.png",width:800}))))),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(b.b)("details",null,Object(b.b)("summary",null,"3 - Scaling MQ and App Connect "),Object(b.b)("br",null),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"3.1")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Scale MQ via a pipeline")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The team has been notified by the marketing department that a major promotion of the mobile app will go live tomorrow. Marketing forecasts this will increase the user base by 50%. The team quickly determines the likely impact and decides it makes sense to scale MQ and App Connect - after all, they can always shrink down the number of instances if the user base doesn’t expand as quickly as marketing predicts. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team updates two files, one to define a third queue manager, and a second to scale App Connect to a fourth instance. Like before, we will manually trigger the pipeline to scale from our application dashboard. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team checks on the pipeline process and opens the Red Hat OpenShift console. The team members see the pipeline has started. They click into the pipeline run to see its progress. ",Object(b.b)("br",null),Object(b.b)("br",null),"They see that the pipeline has successfully pulled files from the GitHub repository, and is deploying the new instance of IBM MQ. As this is a production environment, MQ is deployed in a HA configuration with three containers, and three storage devices. This will take a couple of minutes to complete. ",Object(b.b)("br",null),Object(b.b)("br",null),"Once completed, the team switches back to the application dashboard and sees the new MQ runtime appear, and the traffic is balanced across the three instances. They notice that the mobile app traffic continues un-interrupted during the scaling activity.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Click the ",Object(b.b)("strong",{parentName:"td"},"Scale")," button associated with the Mobile App section.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-1-1-click-scale.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Change tabs to the OpenShift console and navigate to the ",Object(b.b)("strong",{parentName:"td"},"Pipelines")," section (1). Click the pipeline run that has just started (2). ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-1-2-click-scale.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Explain the pipeline flow as outlined in the narration. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-1-3-pipeline-flow.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.4"),Object(b.b)("td",{parentName:"tr",align:"left"},"Wait for the pipeline to complete the ",Object(b.b)("strong",{parentName:"td"},"deploy-mq")," task.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-1-4-deploy-mq.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.5"),Object(b.b)("td",{parentName:"tr",align:"left"},"Return to the application dashboard and see the third MQ runtime appear.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-1-5-third-mq.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.6"),Object(b.b)("td",{parentName:"tr",align:"left"},"Wait until the MQ traffic is balanced. This may take 30 seconds as connections from an application are spread evenly across the queue managers. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-1-6-traffic-balanced.png",width:800}))))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"3.2")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Scale App Connect Enterprise via a pipeline")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"The pipeline continues and scales the App Connect instances. The team watches the pipeline within the OpenShift console. This time they notice that it appears quicker than MQ. This is because no storage devices are required for an App Connect runtime. ",Object(b.b)("br",null),Object(b.b)("br",null),"The team leaves work happy with the environment ready for the new load expected tomorrow.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.2.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Navigate back to the OpenShift console and wait until the ",Object(b.b)("strong",{parentName:"td"},"deploy-ace")," task has successfully completed.",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-2-1-deploy-successful.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.2.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Immediately return to the application dashboard to see the fourth instance appear and the workload being distributed. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-2-1-fourth-instance.png",width:800})," ",Object(b.b)("br",null),Object(b.b)(d,{mdxType:"InlineNotification"},"If you look closely, you may see the MQ traffic is briefly un-balanced. This will only last a few seconds as the connections are rebalanced. ")," ",Object(b.b)("br",null),Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-2-1-fourth-instance-unbalanced.png",width:800}))))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"3.3")),Object(b.b)("th",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"th"},"Increase the workload ")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Narration")),Object(b.b)("td",{parentName:"tr",align:"left"},"In the morning, just before the marketing communication is sent out, the team loads the application dashboard to check the load. They watch as the load increases and see both MQ and App Connect easily handling the increase.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.3.1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Click the ",Object(b.b)("strong",{parentName:"td"},"Request+")," button. ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-3-1-request-button.png",width:800}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("strong",{parentName:"td"},"Action")," "," "," 3.3.2"),Object(b.b)("td",{parentName:"tr",align:"left"},"Show all layers of the architecture behaving as expected.(NOTE - annotation for both boxes?) ",Object(b.b)("br",null),Object(b.b)("br",null)," ",Object(b.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-scalable-and-resilient-cloud-native-integration/images/3-3-2-all-layers.png",width:800}))))),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(b.b)("details",null,Object(b.b)("summary",null,"Summary"),Object(b.b)("br",null),Object(b.b)("p",null,"You’ve seen how the Focus Bank team can release new versions and scale their cloud native integration without impacting the mobile application. This has transformed the effort required to maintain the solution. The team can respond to requests to increase the capacity or to apply fixes immediately. "),Object(b.b)("br",null),Object(b.b)("p",null,"Thank you for attending today’s presentation."),Object(b.b)("br",null),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))))}h.isMDXComponent=!0},OIbQ:function(e,t,a){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}}}]);
//# sourceMappingURL=component---src-pages-300-integration-scalable-and-resilient-cloud-native-integration-demo-script-mdx-16fa9b4878f6666f95aa.js.map