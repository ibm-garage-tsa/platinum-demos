{"componentChunkName":"component---src-pages-300-watson-aiops-prepare-mdx","path":"/300-watson-aiops/prepare/","result":{"pageContext":{"frontmatter":{"title":"TEST ENVIRONMENT for Platinum Demos","description":"TEST ENVIRONMENT","tabs":["Demo preparation","Demo script"]},"relativePagePath":"/300-watson-aiops/prepare.mdx","titleType":"page","MdxNode":{"id":"1f25cce0-8d6e-50c4-ac48-71b924721a34","children":[],"parent":"9eaf26cd-3304-5811-acac-882379e3d0e8","internal":{"content":"---\ntitle: TEST ENVIRONMENT\n  for Platinum Demos\ndescription: TEST ENVIRONMENT\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    TEST ENVIRONMENT <br/> Platinum Demos\n  </span> );\n\n![banner](./images/AIOps_Observability_300_Prep.jpg)\n<span id=\"top\"></span>\n\n| DEMO OVERVIEW | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Demo products** | Cloud Pak for Watson AIOps V3.1 |\n| **Demo capabilities** | Dependency Mapping, Intelligent Alerting, Full Stack Tracing |\n| **Demo video** | View the demo video <a href=\"https://ibm.ent.box.com/s/eogn2t43x23nk8ksyk236teqppe5d49e\" target=\"_blank\" rel=\"noreferrer\">here</a>. This is a short, but detailed, hands-on walkthrough of the scenario. The video is customer-ready. <br/> <br/> Potential uses of this video are: <br/> 1. Familiarize yourself with the details of this scenario <br/> 2. Gain customer agreement that they would like to have a tech-seller do a deep-dive demo of this scenario <br/> 3. Use as a prospecting tool to generate customer interest in these capabilities |\n| **Demo guidance** | A complete demo script is on the second tab above. You can download a printer-ready PDF of the demo script <a href=\"./300-Observability-Demo-Script.pdf\" target=\"_blank\" rel=\"noreferrer\">here</a>. <br/><br/> This demo script has multiple tasks, that each have multiple steps. In each step, you have the details about what you need to do (**Actions**), what you can say while delivering this demo step (**Narration**), and what diagrams and screenshots you will see (**Screenshots**). <br/><br/> This demo script is a suggestion, and you are welcome to customize based on your sales opportunity. Most importantly, practice this demo in advance. If the demo seems easy for you to execute, the customer will focus on the content. If it seems difficult for you to execute, the customer will focus on your delivery. <br/><br/> The demo environment is set to automatically inject an error into the application once every hour. <br/> <br/> The cycle begins on the half-hour (so 9:30, 10:30, etc). You should see errors begin to show up a few minutes after this (around 32 or 33 minutes past the hour). <br/> <br/> The error will resolve itself and go back to a normal state after about 10 minutes. <br/> <br/> There are a few options for how to give demos, given how this demo environment functions. <br/> <br/> 1.\tSchedule a meeting so that you can begin a live demo at 30 minutes past the hour. This will allow you to show the active incident in real time. <br/> 2.\tRun through the demo flow using a past incident. You can set the time period to when an incident was active (instructions are in the demo script). You will be able to run through the same scenario, except it will not show the incident alerts on the events icon on the sidebar. <br/> 3.\tPrior to a meeting, coinciding with an error cycle time, take a screen recording of yourself going through the demo environment following the storyline in the script. Then, you can play the recording and speak to it live. <br/> 4. Use the Platinum Demo video or the click-thru demo, both of which roughly follow the same flow. The video also includes a voiceover, which you can either use or mute and speak to it live. <br/> <br/> After doing option 3 or 4, you can always go into the demo environment to show customers the capabilities in more depth and/or go back through the incident flow as in option 2 above. |\n| **How to get support** | Contact <a href=\"https://ibm-cloud.slack.com/archives/C0124J683GW\" target=\"_blank\" rel=\"noreferrer\">#itz-techzone-support</a> regarding issues with reserving and provisioning TechZone environments.<br/><br/>Contact <a href=\"https://ibm-cloud.slack.com/archives/C0216F39ACU\" target=\"_blank\" rel=\"noreferrer\">#platinumdemos-automation-support</a> regarding issues with setting up and running this demo use case. |\n\n**PREPARE TO GIVE THE DEMO**\n\n<details>\n\n<summary>1 - Environment setup</summary>\n<br/>\n\nLog into the demo environment: <br/>\n•\tFor IBMers, click <a href=\"https://ibmdemo-instanaibm.instana.io\" target=\"_blank\" rel=\"noreferrer\">here</a> <br/>\n•\tFor business partners, click <a href=\"https://demo-partner.instana.io/\" target=\"_blank\" rel=\"noreferrer\">here</a> <br/>\n•\tIf it is your first time accessing the environment, you will need to request access (See **2 - Requisition instructions** below). Allow up to two business days to receive access. <br/> <br/>\n\nNote: <br/>\n•\tIf you will be demonstrating using a live incident (i.e. beginning the demo at 30 minutes past the hour), no additional setup is needed. <br/>\n•\tIf you will be demonstrating using a past incident, you will need to set the time period using the instructions below: <br/> <br/>\n\n1.\tIn the upper right, click the button showing the timeframe. <br/> <br/>\n![timeframe](./images/1_timeframe.png) <br/>\n\n2.\tAt the bottom of the pop-up, set the timeframe to begin at 25 minutes past the hour and end at 35 minutes past the hour. It doesn’t matter which hour you pick. Click **‘Set Time.’** <br/> <br/>\nNote: <br/>\n•\tThis will ensure you see normal behavior and then a sudden change when the incident begins at 0:30. <br/>\n•\tPressing 'enter' doesn’t work. You'll need to actually click the button. <br/> <br/>\n![time_range](./images/2_time_range.png) <br/><br/>\n\nBrenda's screenshot (original): <br/>\n![Brenda original](./images/Picture1-original.png) <br/>\nBrenda's screenshot (resized to 600px): <br/>\n![Brenda original to 600](./images/Picture1-original-to-600.png) <br/>\nDennis's screenshot (original): <br/>\n![screenshot original](./images/test_original.png) <br/>\nDennis's screenshot (resized to 1200px): <br/>\n![1200](./images/test_1200.png) <br/>\nDennis's screenshot (resized to 1100px): <br/>\n![1100](./images/test_1100.png) <br/>\nDennis's screenshot (resized to 1000px): <br/>\n![1000](./images/test_1000.png) <br/>\nDennis's screenshot (resized to 900px): <br/>\n![900](./images/test_900.png) <br/>\nDennis's screenshot (resized to 800px): <br/>\n![800](./images/test_800.png) <br/>\nDennis's screenshot (resized to 700px): <br/>\n![700](./images/test_700.png) <br/>\nDennis's screenshot (resized to 600px): <br/>\n![600](./images/test_600.png)\n\n<br/><br/>\n\nBrenda's screenshot (original): <br/>\n![Brenda original](./images/eventoriginal.png) <br/>\nBrenda's screenshot (resized to 600px): <br/>\n![Brenda original to 600](./images/eventoriginal-to-600.png) <br/>\nDennis's screenshot (original): <br/>\n![screenshot original](./images/eventtest_original.png) <br/>\nDennis's screenshot (resized to 1200px): <br/>\n![1200](./images/eventtest_1200.png) <br/>\nDennis's screenshot (resized to 1100px): <br/>\n![1100](./images/eventtest_1100.png) <br/>\nDennis's screenshot (resized to 1000px): <br/>\n![1000](./images/eventtest_1000.png) <br/>\nDennis's screenshot (resized to 900px): <br/>\n![900](./images/eventtest_900.png) <br/>\nDennis's screenshot (resized to 800px): <br/>\n![800](./images/eventtest_800.png) <br/>\nDennis's screenshot (resized to 700px): <br/>\n![700](./images/eventtest_700.png) <br/>\nDennis's screenshot (resized to 600px): <br/>\n![600](./images/eventtest_600.png)\n\n<br/><br/>\n\n3.\tCheck that the summary tab for the robot shop (**Applications** -> **Robot Shop** -> **Summary**) looks like this (seeing drop in call volume and spikes in errors and latency). <br/> <br/>\n![robot_shop_summary](./images/3_robot_shop_summary.png) <br/>\n\n4.\tClick on **Events** on the sidebar menu and check that there are open incidents, including 'sudden increase in the number of erroneous calls' on the 'discount' service. <br/> <br/>\n![open_incidents](./images/4_open_incidents.png)\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<span id=\"requisition-instructions\"></span>\n\n<summary>2 - TESTING screenshots + columns </summary>\n\n<br/>\n\n| FULL URL, 800px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n| | <img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" /> |\n\n<br/><br/>\n\n| IN IMAGES, 600px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n| | <img src=\"./images/TEST1500.png\" width=\"600\" /> |\n\n\n<br/><br/><br/>\n\n| FULL URL, 800px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n<br/>\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" />\n\n\n| IN IMAGES, 800 px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n<br/>\n<img src=\"./images/TEST1500.png\" width=\"800\" />\n\n</details>\n\n<details>\n\n<summary>3 - TESTING screenshots </summary>\n\n<br/>\n\n| FULL URL, 800 | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Demo products** | <img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" /> |\n\n---\n<br/><br/><br/>\n\n| FULL URL, 800 | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" />\n\n---\n<br/><br/><br/>\n\nFULL URL 1500<br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"1500\" />\n\n\nFULL URL 1200 <br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"1200\" />\n\nFULL URL 1000 <br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"1000\" />\n\nFULL URL 800 <br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" />\n\nFULL URL 600<br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"600\" />\n\n</details>\n","type":"Mdx","contentDigest":"2deff6cb4415588333d1dbc8782368b5","owner":"gatsby-plugin-mdx","counter":2383},"frontmatter":{"title":"TEST ENVIRONMENT for Platinum Demos","description":"TEST ENVIRONMENT","tabs":["Demo preparation","Demo script"]},"exports":{},"rawBody":"---\ntitle: TEST ENVIRONMENT\n  for Platinum Demos\ndescription: TEST ENVIRONMENT\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    TEST ENVIRONMENT <br/> Platinum Demos\n  </span> );\n\n![banner](./images/AIOps_Observability_300_Prep.jpg)\n<span id=\"top\"></span>\n\n| DEMO OVERVIEW | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Demo products** | Cloud Pak for Watson AIOps V3.1 |\n| **Demo capabilities** | Dependency Mapping, Intelligent Alerting, Full Stack Tracing |\n| **Demo video** | View the demo video <a href=\"https://ibm.ent.box.com/s/eogn2t43x23nk8ksyk236teqppe5d49e\" target=\"_blank\" rel=\"noreferrer\">here</a>. This is a short, but detailed, hands-on walkthrough of the scenario. The video is customer-ready. <br/> <br/> Potential uses of this video are: <br/> 1. Familiarize yourself with the details of this scenario <br/> 2. Gain customer agreement that they would like to have a tech-seller do a deep-dive demo of this scenario <br/> 3. Use as a prospecting tool to generate customer interest in these capabilities |\n| **Demo guidance** | A complete demo script is on the second tab above. You can download a printer-ready PDF of the demo script <a href=\"./300-Observability-Demo-Script.pdf\" target=\"_blank\" rel=\"noreferrer\">here</a>. <br/><br/> This demo script has multiple tasks, that each have multiple steps. In each step, you have the details about what you need to do (**Actions**), what you can say while delivering this demo step (**Narration**), and what diagrams and screenshots you will see (**Screenshots**). <br/><br/> This demo script is a suggestion, and you are welcome to customize based on your sales opportunity. Most importantly, practice this demo in advance. If the demo seems easy for you to execute, the customer will focus on the content. If it seems difficult for you to execute, the customer will focus on your delivery. <br/><br/> The demo environment is set to automatically inject an error into the application once every hour. <br/> <br/> The cycle begins on the half-hour (so 9:30, 10:30, etc). You should see errors begin to show up a few minutes after this (around 32 or 33 minutes past the hour). <br/> <br/> The error will resolve itself and go back to a normal state after about 10 minutes. <br/> <br/> There are a few options for how to give demos, given how this demo environment functions. <br/> <br/> 1.\tSchedule a meeting so that you can begin a live demo at 30 minutes past the hour. This will allow you to show the active incident in real time. <br/> 2.\tRun through the demo flow using a past incident. You can set the time period to when an incident was active (instructions are in the demo script). You will be able to run through the same scenario, except it will not show the incident alerts on the events icon on the sidebar. <br/> 3.\tPrior to a meeting, coinciding with an error cycle time, take a screen recording of yourself going through the demo environment following the storyline in the script. Then, you can play the recording and speak to it live. <br/> 4. Use the Platinum Demo video or the click-thru demo, both of which roughly follow the same flow. The video also includes a voiceover, which you can either use or mute and speak to it live. <br/> <br/> After doing option 3 or 4, you can always go into the demo environment to show customers the capabilities in more depth and/or go back through the incident flow as in option 2 above. |\n| **How to get support** | Contact <a href=\"https://ibm-cloud.slack.com/archives/C0124J683GW\" target=\"_blank\" rel=\"noreferrer\">#itz-techzone-support</a> regarding issues with reserving and provisioning TechZone environments.<br/><br/>Contact <a href=\"https://ibm-cloud.slack.com/archives/C0216F39ACU\" target=\"_blank\" rel=\"noreferrer\">#platinumdemos-automation-support</a> regarding issues with setting up and running this demo use case. |\n\n**PREPARE TO GIVE THE DEMO**\n\n<details>\n\n<summary>1 - Environment setup</summary>\n<br/>\n\nLog into the demo environment: <br/>\n•\tFor IBMers, click <a href=\"https://ibmdemo-instanaibm.instana.io\" target=\"_blank\" rel=\"noreferrer\">here</a> <br/>\n•\tFor business partners, click <a href=\"https://demo-partner.instana.io/\" target=\"_blank\" rel=\"noreferrer\">here</a> <br/>\n•\tIf it is your first time accessing the environment, you will need to request access (See **2 - Requisition instructions** below). Allow up to two business days to receive access. <br/> <br/>\n\nNote: <br/>\n•\tIf you will be demonstrating using a live incident (i.e. beginning the demo at 30 minutes past the hour), no additional setup is needed. <br/>\n•\tIf you will be demonstrating using a past incident, you will need to set the time period using the instructions below: <br/> <br/>\n\n1.\tIn the upper right, click the button showing the timeframe. <br/> <br/>\n![timeframe](./images/1_timeframe.png) <br/>\n\n2.\tAt the bottom of the pop-up, set the timeframe to begin at 25 minutes past the hour and end at 35 minutes past the hour. It doesn’t matter which hour you pick. Click **‘Set Time.’** <br/> <br/>\nNote: <br/>\n•\tThis will ensure you see normal behavior and then a sudden change when the incident begins at 0:30. <br/>\n•\tPressing 'enter' doesn’t work. You'll need to actually click the button. <br/> <br/>\n![time_range](./images/2_time_range.png) <br/><br/>\n\nBrenda's screenshot (original): <br/>\n![Brenda original](./images/Picture1-original.png) <br/>\nBrenda's screenshot (resized to 600px): <br/>\n![Brenda original to 600](./images/Picture1-original-to-600.png) <br/>\nDennis's screenshot (original): <br/>\n![screenshot original](./images/test_original.png) <br/>\nDennis's screenshot (resized to 1200px): <br/>\n![1200](./images/test_1200.png) <br/>\nDennis's screenshot (resized to 1100px): <br/>\n![1100](./images/test_1100.png) <br/>\nDennis's screenshot (resized to 1000px): <br/>\n![1000](./images/test_1000.png) <br/>\nDennis's screenshot (resized to 900px): <br/>\n![900](./images/test_900.png) <br/>\nDennis's screenshot (resized to 800px): <br/>\n![800](./images/test_800.png) <br/>\nDennis's screenshot (resized to 700px): <br/>\n![700](./images/test_700.png) <br/>\nDennis's screenshot (resized to 600px): <br/>\n![600](./images/test_600.png)\n\n<br/><br/>\n\nBrenda's screenshot (original): <br/>\n![Brenda original](./images/eventoriginal.png) <br/>\nBrenda's screenshot (resized to 600px): <br/>\n![Brenda original to 600](./images/eventoriginal-to-600.png) <br/>\nDennis's screenshot (original): <br/>\n![screenshot original](./images/eventtest_original.png) <br/>\nDennis's screenshot (resized to 1200px): <br/>\n![1200](./images/eventtest_1200.png) <br/>\nDennis's screenshot (resized to 1100px): <br/>\n![1100](./images/eventtest_1100.png) <br/>\nDennis's screenshot (resized to 1000px): <br/>\n![1000](./images/eventtest_1000.png) <br/>\nDennis's screenshot (resized to 900px): <br/>\n![900](./images/eventtest_900.png) <br/>\nDennis's screenshot (resized to 800px): <br/>\n![800](./images/eventtest_800.png) <br/>\nDennis's screenshot (resized to 700px): <br/>\n![700](./images/eventtest_700.png) <br/>\nDennis's screenshot (resized to 600px): <br/>\n![600](./images/eventtest_600.png)\n\n<br/><br/>\n\n3.\tCheck that the summary tab for the robot shop (**Applications** -> **Robot Shop** -> **Summary**) looks like this (seeing drop in call volume and spikes in errors and latency). <br/> <br/>\n![robot_shop_summary](./images/3_robot_shop_summary.png) <br/>\n\n4.\tClick on **Events** on the sidebar menu and check that there are open incidents, including 'sudden increase in the number of erroneous calls' on the 'discount' service. <br/> <br/>\n![open_incidents](./images/4_open_incidents.png)\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<span id=\"requisition-instructions\"></span>\n\n<summary>2 - TESTING screenshots + columns </summary>\n\n<br/>\n\n| FULL URL, 800px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n| | <img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" /> |\n\n<br/><br/>\n\n| IN IMAGES, 600px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n| | <img src=\"./images/TEST1500.png\" width=\"600\" /> |\n\n\n<br/><br/><br/>\n\n| FULL URL, 800px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n<br/>\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" />\n\n\n| IN IMAGES, 800 px | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Actions** | Do the thing that makes the thing happen. |\n<br/>\n<img src=\"./images/TEST1500.png\" width=\"800\" />\n\n</details>\n\n<details>\n\n<summary>3 - TESTING screenshots </summary>\n\n<br/>\n\n| FULL URL, 800 | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Demo products** | <img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" /> |\n\n---\n<br/><br/><br/>\n\n| FULL URL, 800 | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" />\n\n---\n<br/><br/><br/>\n\nFULL URL 1500<br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"1500\" />\n\n\nFULL URL 1200 <br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"1200\" />\n\nFULL URL 1000 <br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"1000\" />\n\nFULL URL 800 <br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"800\" />\n\nFULL URL 600<br/>\n\n<img src=\"https://ibm-garage-tsa.github.io/platinum-demos/static/07282b8b7ba44de00dfb76a4d04d5079/5dce9/TEST1500.png\" width=\"600\" />\n\n</details>\n","fileAbsolutePath":"/home/runner/work/platinum-demos/platinum-demos/src/pages/300-watson-aiops/prepare.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}