{"componentChunkName":"component---src-pages-300-enhancing-ba-with-integration-demo-script-mdx","path":"/300-enhancing-ba-with-integration/demo-script/","result":{"pageContext":{"frontmatter":{"title":"Enhancing business automation with integration 300-level live demo","description":"Enhancing business automation with integration 300-level live demo","tabs":["Demo preparation","Demo script"]},"relativePagePath":"/300-enhancing-ba-with-integration/demo-script.mdx","titleType":"page","MdxNode":{"id":"7e080d41-e95a-5818-a1e2-9b89e8bc1696","children":[],"parent":"d7c7cdb8-eb50-559b-b909-baf5407b92df","internal":{"content":"---\ntitle: Enhancing business automation with integration\n  300-level live demo\ndescription: Enhancing business automation with integration 300-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    <h1 style=\"font-size:71px;\">Enhancing business automation with integration <br/> 300-level live demo</h1>\n  </span> );\n\n\n\n<span id=\"top\"></span>\n\n<details>\n<summary>Introduction</summary>\n<br/>\n\nToday we will combine workflow and integration to streamline the customer data-gathering required to complete a new account opening process.  We’ll add application integration to an account opening process that has already been automated with workflow.\n\n<br/>\n\nWe’ll see how integration capabilities enable seamless access to critical back-end systems regardless of location and complexity, simplifying access to the required data and transactions.  Business operations powered by workflow and integration increase productivity by automating access to disparate back-end systems.\n\n<br/>\n\nLet’s get started.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>1 - (CP4BA) Automating the account opening process with workflow</summary>\n\n<br/>\n\n| **1.1** | **Introduce the account opening workflow (without integration)** |\n| :--- | :--- |\n| **Narration** | Focus Bank, a regional full-service bank, is looking to further automate its core banking processes. Over the years the bank has grown dramatically via acquisitions.  For example, the bank recently acquired the smaller Corner Bank. This has caused an increase in the amount manual work needed to gather information across disparate IT systems. <br/><br/> Let’s look at how Focus Bank currently completes new account requests. In the existing process, every new account opening request must be routed to a new account specialist. |\n| **Action** &nbsp; 1.1.1 | Show the process diagram for Focus Bank’s current account opening process (without integration) in Process Designer, which you opened during the demo preparation. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-1-1.png\" width=\"800\" /> |\n| **Narration** | This is the current process diagram for Focus Bank’s account opening process. The bank used Process Designer to design and implement the process. Within this low-code environment, the process diagram controls the execution of each new account opening request. The process diagram adheres to the Business Process Modeling Notation (BPMN) standard. The bank used process designer’s drag-and-drop tooling to build the process diagram from a palette of components. The process activities and flow are laid out here. From there, the bank was able to drill down to complete the implementation and testing of the process application. |\n\n<br/>\n\n| **1.2** | **Execute the account opening workflow (without integration)** |\n| :--- | :--- |\n| **Narration** | Workplace is the portal used by customer service agents at the bank to launch new account opening requests and work on assigned tasks. |\n| **Action** &nbsp; 1.2.1 | Show the **Workplace** window you opened during your preparation. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-1.png\" width=\"800\" /> |\n| **Narration** | Workplace is highly customizable to fit your organization’s look and feel. The responsive user interface provides flexibility to get work done anywhere, at any time, on any device type, from a desktop device in the office to a mobile device at home or at a customer site. It can be configured through a set of options without having to customize the Workplace application itself. <br/><br/> To request a new account, a customer service representative initiates a new account request and enters the customer’s information. |\n| **Action** &nbsp; 1.2.2 | Click the **Start workflow** button. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.3 | Click the **New Account (Current Workflow)** tile (1) and then **Launch** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-3.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.4 | Select the **Account Type** and enter the **Customer Account Number**, **First Name**, and **Last Name** (1). Click **Next** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-4.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.5 | Click **Done**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-5.png\" width=\"800\" /> |\n| **Narration** | Account specialists use Workplace to organize and work on tasks assigned to them. Our specialist has received a new task to gather the customer’s account info. <br/><br/> For each new account request, the customer service agent manually gathers the customer’s existing account info. The agent must log in to three different systems and manually enter the account info into the request. This is both time-consuming and error-prone, as the specialist must go field-by-field to copy-and-paste all the customer’s account data into the new account request. <br/><br/> Behind the scenes, the new account process is managed by workflow. Once the account specialist completes this task, the system routes the request for approval. |\n| **Action** &nbsp; 1.2.6 | Run the most recent **Gather Account Info** task by clicking its corresponding **Name**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-6.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.7 | Manually enter the customer’s information, as highlighted in the screenshot below. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-8.png\" width=\"800\" /> |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>2 - (CP4I) Using integration to gather and consolidate customer account data</summary>\n\n<br/>\n\n| **2.1** | **Review the flow** |\n| :--- | :--- |\n| **Narration** | Automating the retrieval of the customer accounts removes manual steps, avoiding potential errors, costs, and delays to the business. <br/><br/> The bank has created an integration that retrieves the existing Focus Bank accounts, using an HTTP API, and the new accounts from Corner Bank, using IBM MQ. Corner Bank has a separate network and therefore, the communication is considered bank-to-bank. They use MQ for its assured delivery and secure communication characteristics, even for data retrieval operations. <br/><br/> Focus bank built the integration using the designer tooling within the Cloud Pak for Integration. They created API integration flows to manage connectivity to services and endpoints. The two flows for this demo have already been built and are in the *Recently edited integrations* section. Let’s navigate into the Accounts flow. |\n| **Action** &nbsp; 2.1.1 | Under **Recently edited integrations**, click the **Accounts** tile. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-1.png\" width=\"800\" /> |\n| **Narration** | The designer builds the API for the bank. They don’t need to worry about OpenAPI specs or Swagger editors; they're all built in. These are the fields we’re going to use for the API. Note that we tell the API which field is the key – in our case, customerId. |\n| **Action** &nbsp; 2.1.2 | Select the **Properties** view. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.3 | Point out the **Properties**, as highlighted in the screenshot below. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-3.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.4 | Select the **Operations** view. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-4.png\" width=\"800\" /> |\n| **Narration** | In the Operations view, we can see the actions that the API exposes, along with the data. The bank implements the 'Retrieve Accounts by ID' operation. Let’s check the flow logic. |\n| **Action** &nbsp; 2.1.5 | Click **View flow**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-5.png\" width=\"800\" /> |\n| **Narration** | Here is the bank’s flow. The designer flow editor allows us to view, edit, and change the flow. The API enables a single view of the customer accounts across both banks. The flow calls an HTTP API to retrieve the accounts from Focus Bank, and it uses IBM MQ for the accounts from Corner Bank. The responses are combined, formatted, and returned. |\n| **Action** &nbsp; 2.1.6 | Click the **Request** step to show the request. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-6.png\" width=\"800\" /> |\n| **Narration** | The bank’s flow starts by receiving the customer’s ID as part of the API URL. Integration Designer automatically creates an API 'request' and 'response' for the API flow. <br/><br/> Next, Focus Bank invokes the customer account retrieval API. The customerId is passed in from the inbound request. |\n| **Action** &nbsp; 2.1.7 | Click the **Customer Account** step to show the customer account information. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-7.png\" width=\"800\" /> |\n| **Narration** | Corner Bank’s accounts are retrieved using IBM MQ. Using a connector for IBM MQ, the payload of the request message is created, which includes the customerID. Additionally, a queue name is specified for where the message is sent. Corner Bank’s application will receive the request from this queue. |\n| **Action** &nbsp; 2.1.8 | Click the **IBM MQ** step to show the target fields. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-8.png\" width=\"800\" /> |\n| **Narration** | Focus Bank uses a connector for IBM MQ to retrieve the response message. A separate queue, called OUT, is used to receive the response message. |\n| **Action** &nbsp; 2.1.9 | Click the second **IBM MQ** step in the flow to show the target fields. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-9.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.10 | Click the **JSON Parser** step to show the details. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-10.png\" width=\"800\" /> |\n| **Narration** | Now a JSON parser action is used to parse the response data from MQ. The bank teaches the JSON Parser the expected structure of the JSON using an example, avoiding the need to learn and create a formal JSON schema. |\n| **Action** &nbsp; 2.1.11 | Click the **Response** step to show the response. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-11.png\" width=\"800\" /> |\n| **Narration** | The response message is created using the data returned from both banks. In the response mapping below, Corner Bank’s account detail is mapped within the 'partnerAccount' section of the response. |\n| **Action** &nbsp; 2.1.12 | Click **Done**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-11.png\" width=\"800\" /> |\n\n<br/>\n\n| **2.2** | **Test the flow** |\n| :--- | :--- |\n| **Narration** | APIs can be tested in various ways, and we will perform two different tests: one in the designer tool now, and another later when our API is called from the workflow. <br/><br/> In the Test tab, the bank gets all the details to test their API - for example, endpoint and credentials. They can easily test our flow here; they just need to enter a valid customer ID and submit it. They receive the expected response with the combined bank account details, proving that the integration works. |\n| **Action** &nbsp; 2.2.1 | Select the **Test** tab (1). Click **GET /Accounts/{customerId}** (2) and then **Try it** (3). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-3-1.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.2.2 | Enter '**1234567890**' as the **customerId** (1), and click **Send** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-3-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.2.3 | Point out the **Response** details. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-3-2.png\" width=\"800\" /> |\n\n<br/>\n\n| **2.3** | **Export the API definition for the Cloud Pak for Business Automation** |\n| :--- | :--- |\n| **Narration** | The accounts API has been tested locally in the Cloud Pak for Integration and the bank is ready to share this with the workflow. It only takes the bank a couple of clicks to export the API definition so it can be consumed by the workflow.  |\n| **Action** &nbsp; 2.3.1 | Open the **Designer Dashboard** (1). Click the **Menu** icon (2). Click **Export** (3). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-4-1.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.3.2 | Select **OpenAPI V3.0 (YAML)** (1) and click **Export** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-4-2.png\" width=\"800\" /> |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>3 - (CP4BA) Adding integrations to the account opening process</summary>\n\n<br/>\n\n| **3.1** | **Introduce the workflow process with integration** |\n| :--- | :--- |\n| **Narration** | Now let’s look at how the bank incorporates the integration they just built into the workflow in Cloud Pak for Business Automation. |\n| **Action** &nbsp; 3.1.1 | Click **Processes** (1) and then **New Account (Enhanced with Integration)** (2) to open the enhanced workflow for the account opening process in Process Designer. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-1-1.png\" width=\"800\" /> <br/><br/> You will see the following process diagram. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-1-2.png\" width=\"800\" /> |\n| **Narration** | Here’s a new version of the workflow. The integration automatically gathers the customer account information in the first step of the process. The bank is able to remove the subsequent manual task *Gather Account Info*.  Instead of having to assign a task to an account specialist, the new integration provides all the information needed to make a decision. Workflow will route the request directly to an account approver. |\n\n<br/>\n\n| **3.2** | **Create the workflow integration service** |\n| :--- | :--- |\n| **Narration** | Using the low-code Process Designer authoring environment, the bank can easily incorporate the integration into the workflow. <br/><br/> Let’s see how this is done. <br/><br/> The bank uses an external service to call the integration. Process Designer provides a discovery mechanism to automatically generate the external service component. |\n| **Action** &nbsp; 3.2.1 | Click **Services** (1). Click the **Add** icon (2) and then **External Service** (3) to launch the **New External Service** wizard. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-1.png\" width=\"800\" /> |\n| **Narration** | The bank connects to the Accounts service using the REST API that was just created in the Cloud Pak for Integration. |\n| **Action** &nbsp; 3.2.2 | Click **Next**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-2.png\" width=\"800\" /> |\n| **Narration** | The bank uses the API definition stored in the OpenAPI (YAML) file to discover the REST service. They’re able to graphically consume the REST service and incorporate it into the workflow without needing to write any code. |\n| **Action** &nbsp; 3.2.3 | Click the **File** icon (1) and select the .yaml file you just downloaded. Click **Next** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-3.png\" width=\"800\" /> |\n| **Narration** | The operation is automatically discovered. |\n| **Action** &nbsp; 3.2.4 | Click **Next**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-4.png\" width=\"800\" /> |\n| **Narration** | An external service component is automatically generated, which the bank wires into the workflow. The external service is bound to a server containing the information needed to connect to the integration. If any of the inputs and outputs use complex objects, the objects will be automatically generated and inserted into the workflow library. |\n| **Action** &nbsp; 3.2.5 | Click **Cancel**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-5.png\" width=\"800\" /> |\n| **Narration** | We’ll cancel the wizard since the External Service was already created in the process library. |\n| **Action** &nbsp; 3.2.6 | Click the existing external service named **Accounts** in the process library to show the external service that was automatically generated. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-6.png\" width=\"800\" /> <br/><br/> You will see the following screen. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-7.png\" width=\"800\" /> |\n| **Narration** | This is the external service that was automatically generated. |\n| **Action** &nbsp; 3.2.7 | Click the **Arrow** icons next to **Accounts**, **Accounts.findByld**, **Input**, and **Output** to show the inputs and outputs. Click the output **Accounts_findById** and show that the output is a complex object. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-8.png\" width=\"800\" /> |\n| **Narration** | The bank is now ready to use the integration in the workflow. They wire it into the first step of the process, so the customer account info will be automatically gathered in real time when the request is first created by the customer service agent. <br/><br/> Let’s go back to the workflow definition. |\n| **Action** &nbsp; 3.2.8 | Click **Processes** (1) and then **New Account (Enhanced with Integration)** (2 to reopen the enhanced workflow for the account opening process in Process Designer. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-9.png\" width=\"800\" /> <br/><br/> You will again see the process diagram. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-10.png\" width=\"800\" /> |\n| **Narration** | Next, the bank implements a workflow activity to invoke the REST call. Note that the *Gather Account Info* activity is in the *System* swim lane, meaning it will be automatically executed. |\n| **Action** &nbsp; 3.2.9 | Click the **Gather Account Info** activity (1) to display the property sheets below. <br/><br/> At the bottom of the **General** tab, under **Implementation**, click **New** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-11.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.10 | Name the new service '**Get Customer Accounts**' (1). Click **Finish** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-12.png\" width=\"800\" /> |\n| **Narration** | Next, the bank drags the external service they just created into the service flow. |\n| **Action** &nbsp; 3.2.11 | From the process library, click **Services** (1). Under **External Service**, drag **Accounts** (2) into the new service definition (3). Position the component over the flow line and the flow line will highlight. Drop the component and it will automatically be wired into the flow. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-14.png\" width=\"800\" /> You will see the following flow line. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-15.png\" width=\"800\" /> |\n| **Narration** | The bank simply selects the operation and maps the input and output for the call. |\n| **Action** &nbsp; 3.2.12 | Click the **Accounts** component (1) to display the property sheet below. Click the **Implementation** tab (2) and set the **Operation** to '**Accounts.findById**' (3). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-16.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.13 | Click the **Data Mapping** tab (1). Click the **Automap** icon under **Input Mapping** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-17.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.14 | To map the **customerId** input, check the box under **Input** (1). Click **Finish** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-18.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.15 | Click the **Automap** icon under **Output Mapping**. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-19.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.16 | For **Accounts_findById**, check the box under **Output** (1). Click **Finish** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-20.png\" width=\"800\" /> |\n| **Narration** | For now, we’ve just hard-coded the API key.  In their real deployment, the bank would pass the API key using an environment variable. |\n| **Action** &nbsp; 3.2.17 | Under **API Key Mapping**, enter the API Key surrounded by quotes (e.g., '**API-KEY-GOES-HERE**'). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-21.png\" width=\"800\" /> |\n| **Narration** | To test the service, the bank enters a default value for the 'customerId' variable. |\n| **Action** &nbsp; 3.2.18 | Select the **Variables** tab (1). Under **Variables** and **Input**, select **customerId** (2). Set the default value of the **customerId** to '**1234567890**' (3). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-22.png\" width=\"800\" /> |\n| **Narration** | The bank can run, test, and debug processes and services in the Process Designer Inspector. <br/><br/> The bank tests that the integration is working as expected. They start the service and step into the first step. |\n| **Action** &nbsp; 3.2.19 | Test the new service by clicking the **Debug** icon. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-23.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.20 | Click the **Step over** icon. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-24.png\" width=\"800\" /> |\n| **Narration** | The service has invoked the REST API. As we see here, the integration has returned the list of accounts for this customerId. |\n| **Action** &nbsp; 3.2.21 | Click **Data** (1) to open the variables. Click the **Accounts_findById** and then the **savingAccount** variables (2) to show that the integration returned the customer account information. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-25.png\" width=\"800\" /> |\n| **Narration** | Now that the bank has tested the integration, they go back to the process diagram to map the inputs and outputs of the call into the workflow. |\n| **Action** &nbsp; 3.2.22 | In the process library, click **Processes** (1) and then **New Account (Enhanced with Integration)** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-26.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.23 | Click the **Gather Account Info** activity. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-28-.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.24 | Select the **Data Mapping** tab (1). Under Input Mapping, click the **Variable Picker** icon (2). Open **request** (3). Click **customer** and then **id** (4). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-27.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.25 | Under **Output Mapping**, click the **Variable Picker** icon (1). Open **request** (2) and then **customer** (3). Select **accounts** (4). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-28.png\" width=\"800\" /> <br/><br/> The resulting data mapping is displayed. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-29.png\" width=\"800\" /> |\n| **Narration** | The bank has now added the integration to the workflow. They are ready to test the new workflow with the integration. |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>4 - Executing the process</summary>\n\n<br/>\n\n| **4.1** | **Execute the new account process with integration** |\n| :--- | :--- |\n| **Narration** | The bank is ready to do end-to-end testing of the new workflow. They start by making a new request. <br/><br/> The bank uses Workplace to initiate the new account request. |\n| **Action** &nbsp; 4.1.1 | Return to the **Workplace** window, and click the **Start workflow** button. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 4.1.2 | Click the **New Account (Enhance with Integration)** tile (1) and then **Launch** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-3.png\" width=\"800\" /> |\n| **Action** &nbsp; 4.1.3 | Select the **Account Type** and enter the **Customer Account Number**, **First Name**, and **Last Name** (1). Click **Next** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-4.png\" width=\"800\" /> |\n| **Action** &nbsp; 4.1.4 | Click **Done**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-5.png\" width=\"800\" /> |\n| **Narration** | The bank sees that the request is now routed directly for approval. There is no longer the need to manually gather the account info. |\n| **Action** &nbsp; 4.1.5 | Run the most recent **Approve New Account Request** task by clicking the task name. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-6.png\" width=\"800\" /> |\n| **Narration** | Within the *Approve Request* task, the bank sees the combined account information that was automatically gathered using the integration. The combined bank account details were automatically gathered from two-back systems in the background. This avoided the need for an account specialist to log in to each of them individually and manually collect this information. As Focus Bank grows and acquires additional banks, the integration can be extended and deployed without modifications to the workflow. |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>Summary</summary>\n\n<br/>\n\nBy combining the Cloud Pak for Business Automation and Cloud Pak for Integration, Focus Bank enhanced the account opening process, resulting in lower costs, reduced turnaround time, and increased customer satisfaction.\n\n<br/>\n\nThank you for attending today’s demonstration.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n","type":"Mdx","contentDigest":"379f17df03635ce0743ff0b1b3b52e92","owner":"gatsby-plugin-mdx","counter":2823},"frontmatter":{"title":"Enhancing business automation with integration 300-level live demo","description":"Enhancing business automation with integration 300-level live demo","tabs":["Demo preparation","Demo script"]},"exports":{},"rawBody":"---\ntitle: Enhancing business automation with integration\n  300-level live demo\ndescription: Enhancing business automation with integration 300-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    <h1 style=\"font-size:71px;\">Enhancing business automation with integration <br/> 300-level live demo</h1>\n  </span> );\n\n\n\n<span id=\"top\"></span>\n\n<details>\n<summary>Introduction</summary>\n<br/>\n\nToday we will combine workflow and integration to streamline the customer data-gathering required to complete a new account opening process.  We’ll add application integration to an account opening process that has already been automated with workflow.\n\n<br/>\n\nWe’ll see how integration capabilities enable seamless access to critical back-end systems regardless of location and complexity, simplifying access to the required data and transactions.  Business operations powered by workflow and integration increase productivity by automating access to disparate back-end systems.\n\n<br/>\n\nLet’s get started.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>1 - (CP4BA) Automating the account opening process with workflow</summary>\n\n<br/>\n\n| **1.1** | **Introduce the account opening workflow (without integration)** |\n| :--- | :--- |\n| **Narration** | Focus Bank, a regional full-service bank, is looking to further automate its core banking processes. Over the years the bank has grown dramatically via acquisitions.  For example, the bank recently acquired the smaller Corner Bank. This has caused an increase in the amount manual work needed to gather information across disparate IT systems. <br/><br/> Let’s look at how Focus Bank currently completes new account requests. In the existing process, every new account opening request must be routed to a new account specialist. |\n| **Action** &nbsp; 1.1.1 | Show the process diagram for Focus Bank’s current account opening process (without integration) in Process Designer, which you opened during the demo preparation. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-1-1.png\" width=\"800\" /> |\n| **Narration** | This is the current process diagram for Focus Bank’s account opening process. The bank used Process Designer to design and implement the process. Within this low-code environment, the process diagram controls the execution of each new account opening request. The process diagram adheres to the Business Process Modeling Notation (BPMN) standard. The bank used process designer’s drag-and-drop tooling to build the process diagram from a palette of components. The process activities and flow are laid out here. From there, the bank was able to drill down to complete the implementation and testing of the process application. |\n\n<br/>\n\n| **1.2** | **Execute the account opening workflow (without integration)** |\n| :--- | :--- |\n| **Narration** | Workplace is the portal used by customer service agents at the bank to launch new account opening requests and work on assigned tasks. |\n| **Action** &nbsp; 1.2.1 | Show the **Workplace** window you opened during your preparation. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-1.png\" width=\"800\" /> |\n| **Narration** | Workplace is highly customizable to fit your organization’s look and feel. The responsive user interface provides flexibility to get work done anywhere, at any time, on any device type, from a desktop device in the office to a mobile device at home or at a customer site. It can be configured through a set of options without having to customize the Workplace application itself. <br/><br/> To request a new account, a customer service representative initiates a new account request and enters the customer’s information. |\n| **Action** &nbsp; 1.2.2 | Click the **Start workflow** button. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.3 | Click the **New Account (Current Workflow)** tile (1) and then **Launch** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-3.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.4 | Select the **Account Type** and enter the **Customer Account Number**, **First Name**, and **Last Name** (1). Click **Next** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-4.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.5 | Click **Done**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-5.png\" width=\"800\" /> |\n| **Narration** | Account specialists use Workplace to organize and work on tasks assigned to them. Our specialist has received a new task to gather the customer’s account info. <br/><br/> For each new account request, the customer service agent manually gathers the customer’s existing account info. The agent must log in to three different systems and manually enter the account info into the request. This is both time-consuming and error-prone, as the specialist must go field-by-field to copy-and-paste all the customer’s account data into the new account request. <br/><br/> Behind the scenes, the new account process is managed by workflow. Once the account specialist completes this task, the system routes the request for approval. |\n| **Action** &nbsp; 1.2.6 | Run the most recent **Gather Account Info** task by clicking its corresponding **Name**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-6.png\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.7 | Manually enter the customer’s information, as highlighted in the screenshot below. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/1-2-8.png\" width=\"800\" /> |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>2 - (CP4I) Using integration to gather and consolidate customer account data</summary>\n\n<br/>\n\n| **2.1** | **Review the flow** |\n| :--- | :--- |\n| **Narration** | Automating the retrieval of the customer accounts removes manual steps, avoiding potential errors, costs, and delays to the business. <br/><br/> The bank has created an integration that retrieves the existing Focus Bank accounts, using an HTTP API, and the new accounts from Corner Bank, using IBM MQ. Corner Bank has a separate network and therefore, the communication is considered bank-to-bank. They use MQ for its assured delivery and secure communication characteristics, even for data retrieval operations. <br/><br/> Focus bank built the integration using the designer tooling within the Cloud Pak for Integration. They created API integration flows to manage connectivity to services and endpoints. The two flows for this demo have already been built and are in the *Recently edited integrations* section. Let’s navigate into the Accounts flow. |\n| **Action** &nbsp; 2.1.1 | Under **Recently edited integrations**, click the **Accounts** tile. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-1.png\" width=\"800\" /> |\n| **Narration** | The designer builds the API for the bank. They don’t need to worry about OpenAPI specs or Swagger editors; they're all built in. These are the fields we’re going to use for the API. Note that we tell the API which field is the key – in our case, customerId. |\n| **Action** &nbsp; 2.1.2 | Select the **Properties** view. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.3 | Point out the **Properties**, as highlighted in the screenshot below. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-3.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.4 | Select the **Operations** view. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-4.png\" width=\"800\" /> |\n| **Narration** | In the Operations view, we can see the actions that the API exposes, along with the data. The bank implements the 'Retrieve Accounts by ID' operation. Let’s check the flow logic. |\n| **Action** &nbsp; 2.1.5 | Click **View flow**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-5.png\" width=\"800\" /> |\n| **Narration** | Here is the bank’s flow. The designer flow editor allows us to view, edit, and change the flow. The API enables a single view of the customer accounts across both banks. The flow calls an HTTP API to retrieve the accounts from Focus Bank, and it uses IBM MQ for the accounts from Corner Bank. The responses are combined, formatted, and returned. |\n| **Action** &nbsp; 2.1.6 | Click the **Request** step to show the request. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-6.png\" width=\"800\" /> |\n| **Narration** | The bank’s flow starts by receiving the customer’s ID as part of the API URL. Integration Designer automatically creates an API 'request' and 'response' for the API flow. <br/><br/> Next, Focus Bank invokes the customer account retrieval API. The customerId is passed in from the inbound request. |\n| **Action** &nbsp; 2.1.7 | Click the **Customer Account** step to show the customer account information. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-7.png\" width=\"800\" /> |\n| **Narration** | Corner Bank’s accounts are retrieved using IBM MQ. Using a connector for IBM MQ, the payload of the request message is created, which includes the customerID. Additionally, a queue name is specified for where the message is sent. Corner Bank’s application will receive the request from this queue. |\n| **Action** &nbsp; 2.1.8 | Click the **IBM MQ** step to show the target fields. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-8.png\" width=\"800\" /> |\n| **Narration** | Focus Bank uses a connector for IBM MQ to retrieve the response message. A separate queue, called OUT, is used to receive the response message. |\n| **Action** &nbsp; 2.1.9 | Click the second **IBM MQ** step in the flow to show the target fields. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-9.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.10 | Click the **JSON Parser** step to show the details. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-10.png\" width=\"800\" /> |\n| **Narration** | Now a JSON parser action is used to parse the response data from MQ. The bank teaches the JSON Parser the expected structure of the JSON using an example, avoiding the need to learn and create a formal JSON schema. |\n| **Action** &nbsp; 2.1.11 | Click the **Response** step to show the response. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-11.png\" width=\"800\" /> |\n| **Narration** | The response message is created using the data returned from both banks. In the response mapping below, Corner Bank’s account detail is mapped within the 'partnerAccount' section of the response. |\n| **Action** &nbsp; 2.1.12 | Click **Done**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-2-11.png\" width=\"800\" /> |\n\n<br/>\n\n| **2.2** | **Test the flow** |\n| :--- | :--- |\n| **Narration** | APIs can be tested in various ways, and we will perform two different tests: one in the designer tool now, and another later when our API is called from the workflow. <br/><br/> In the Test tab, the bank gets all the details to test their API - for example, endpoint and credentials. They can easily test our flow here; they just need to enter a valid customer ID and submit it. They receive the expected response with the combined bank account details, proving that the integration works. |\n| **Action** &nbsp; 2.2.1 | Select the **Test** tab (1). Click **GET /Accounts/{customerId}** (2) and then **Try it** (3). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-3-1.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.2.2 | Enter '**1234567890**' as the **customerId** (1), and click **Send** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-3-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.2.3 | Point out the **Response** details. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-3-2.png\" width=\"800\" /> |\n\n<br/>\n\n| **2.3** | **Export the API definition for the Cloud Pak for Business Automation** |\n| :--- | :--- |\n| **Narration** | The accounts API has been tested locally in the Cloud Pak for Integration and the bank is ready to share this with the workflow. It only takes the bank a couple of clicks to export the API definition so it can be consumed by the workflow.  |\n| **Action** &nbsp; 2.3.1 | Open the **Designer Dashboard** (1). Click the **Menu** icon (2). Click **Export** (3). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-4-1.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.3.2 | Select **OpenAPI V3.0 (YAML)** (1) and click **Export** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/2-4-2.png\" width=\"800\" /> |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>3 - (CP4BA) Adding integrations to the account opening process</summary>\n\n<br/>\n\n| **3.1** | **Introduce the workflow process with integration** |\n| :--- | :--- |\n| **Narration** | Now let’s look at how the bank incorporates the integration they just built into the workflow in Cloud Pak for Business Automation. |\n| **Action** &nbsp; 3.1.1 | Click **Processes** (1) and then **New Account (Enhanced with Integration)** (2) to open the enhanced workflow for the account opening process in Process Designer. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-1-1.png\" width=\"800\" /> <br/><br/> You will see the following process diagram. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-1-2.png\" width=\"800\" /> |\n| **Narration** | Here’s a new version of the workflow. The integration automatically gathers the customer account information in the first step of the process. The bank is able to remove the subsequent manual task *Gather Account Info*.  Instead of having to assign a task to an account specialist, the new integration provides all the information needed to make a decision. Workflow will route the request directly to an account approver. |\n\n<br/>\n\n| **3.2** | **Create the workflow integration service** |\n| :--- | :--- |\n| **Narration** | Using the low-code Process Designer authoring environment, the bank can easily incorporate the integration into the workflow. <br/><br/> Let’s see how this is done. <br/><br/> The bank uses an external service to call the integration. Process Designer provides a discovery mechanism to automatically generate the external service component. |\n| **Action** &nbsp; 3.2.1 | Click **Services** (1). Click the **Add** icon (2) and then **External Service** (3) to launch the **New External Service** wizard. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-1.png\" width=\"800\" /> |\n| **Narration** | The bank connects to the Accounts service using the REST API that was just created in the Cloud Pak for Integration. |\n| **Action** &nbsp; 3.2.2 | Click **Next**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-2.png\" width=\"800\" /> |\n| **Narration** | The bank uses the API definition stored in the OpenAPI (YAML) file to discover the REST service. They’re able to graphically consume the REST service and incorporate it into the workflow without needing to write any code. |\n| **Action** &nbsp; 3.2.3 | Click the **File** icon (1) and select the .yaml file you just downloaded. Click **Next** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-3.png\" width=\"800\" /> |\n| **Narration** | The operation is automatically discovered. |\n| **Action** &nbsp; 3.2.4 | Click **Next**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-4.png\" width=\"800\" /> |\n| **Narration** | An external service component is automatically generated, which the bank wires into the workflow. The external service is bound to a server containing the information needed to connect to the integration. If any of the inputs and outputs use complex objects, the objects will be automatically generated and inserted into the workflow library. |\n| **Action** &nbsp; 3.2.5 | Click **Cancel**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-5.png\" width=\"800\" /> |\n| **Narration** | We’ll cancel the wizard since the External Service was already created in the process library. |\n| **Action** &nbsp; 3.2.6 | Click the existing external service named **Accounts** in the process library to show the external service that was automatically generated. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-6.png\" width=\"800\" /> <br/><br/> You will see the following screen. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-7.png\" width=\"800\" /> |\n| **Narration** | This is the external service that was automatically generated. |\n| **Action** &nbsp; 3.2.7 | Click the **Arrow** icons next to **Accounts**, **Accounts.findByld**, **Input**, and **Output** to show the inputs and outputs. Click the output **Accounts_findById** and show that the output is a complex object. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-8.png\" width=\"800\" /> |\n| **Narration** | The bank is now ready to use the integration in the workflow. They wire it into the first step of the process, so the customer account info will be automatically gathered in real time when the request is first created by the customer service agent. <br/><br/> Let’s go back to the workflow definition. |\n| **Action** &nbsp; 3.2.8 | Click **Processes** (1) and then **New Account (Enhanced with Integration)** (2 to reopen the enhanced workflow for the account opening process in Process Designer. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-9.png\" width=\"800\" /> <br/><br/> You will again see the process diagram. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-10.png\" width=\"800\" /> |\n| **Narration** | Next, the bank implements a workflow activity to invoke the REST call. Note that the *Gather Account Info* activity is in the *System* swim lane, meaning it will be automatically executed. |\n| **Action** &nbsp; 3.2.9 | Click the **Gather Account Info** activity (1) to display the property sheets below. <br/><br/> At the bottom of the **General** tab, under **Implementation**, click **New** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-11.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.10 | Name the new service '**Get Customer Accounts**' (1). Click **Finish** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-12.png\" width=\"800\" /> |\n| **Narration** | Next, the bank drags the external service they just created into the service flow. |\n| **Action** &nbsp; 3.2.11 | From the process library, click **Services** (1). Under **External Service**, drag **Accounts** (2) into the new service definition (3). Position the component over the flow line and the flow line will highlight. Drop the component and it will automatically be wired into the flow. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-14.png\" width=\"800\" /> You will see the following flow line. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-15.png\" width=\"800\" /> |\n| **Narration** | The bank simply selects the operation and maps the input and output for the call. |\n| **Action** &nbsp; 3.2.12 | Click the **Accounts** component (1) to display the property sheet below. Click the **Implementation** tab (2) and set the **Operation** to '**Accounts.findById**' (3). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-16.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.13 | Click the **Data Mapping** tab (1). Click the **Automap** icon under **Input Mapping** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-17.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.14 | To map the **customerId** input, check the box under **Input** (1). Click **Finish** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-18.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.15 | Click the **Automap** icon under **Output Mapping**. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-19.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.16 | For **Accounts_findById**, check the box under **Output** (1). Click **Finish** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-20.png\" width=\"800\" /> |\n| **Narration** | For now, we’ve just hard-coded the API key.  In their real deployment, the bank would pass the API key using an environment variable. |\n| **Action** &nbsp; 3.2.17 | Under **API Key Mapping**, enter the API Key surrounded by quotes (e.g., '**API-KEY-GOES-HERE**'). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-21.png\" width=\"800\" /> |\n| **Narration** | To test the service, the bank enters a default value for the 'customerId' variable. |\n| **Action** &nbsp; 3.2.18 | Select the **Variables** tab (1). Under **Variables** and **Input**, select **customerId** (2). Set the default value of the **customerId** to '**1234567890**' (3). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-22.png\" width=\"800\" /> |\n| **Narration** | The bank can run, test, and debug processes and services in the Process Designer Inspector. <br/><br/> The bank tests that the integration is working as expected. They start the service and step into the first step. |\n| **Action** &nbsp; 3.2.19 | Test the new service by clicking the **Debug** icon. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-23.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.20 | Click the **Step over** icon. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-24.png\" width=\"800\" /> |\n| **Narration** | The service has invoked the REST API. As we see here, the integration has returned the list of accounts for this customerId. |\n| **Action** &nbsp; 3.2.21 | Click **Data** (1) to open the variables. Click the **Accounts_findById** and then the **savingAccount** variables (2) to show that the integration returned the customer account information. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-25.png\" width=\"800\" /> |\n| **Narration** | Now that the bank has tested the integration, they go back to the process diagram to map the inputs and outputs of the call into the workflow. |\n| **Action** &nbsp; 3.2.22 | In the process library, click **Processes** (1) and then **New Account (Enhanced with Integration)** (2). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-26.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.23 | Click the **Gather Account Info** activity. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-28-.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.24 | Select the **Data Mapping** tab (1). Under Input Mapping, click the **Variable Picker** icon (2). Open **request** (3). Click **customer** and then **id** (4). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-27.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.2.25 | Under **Output Mapping**, click the **Variable Picker** icon (1). Open **request** (2) and then **customer** (3). Select **accounts** (4). <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-28.png\" width=\"800\" /> <br/><br/> The resulting data mapping is displayed. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/3-2-29.png\" width=\"800\" /> |\n| **Narration** | The bank has now added the integration to the workflow. They are ready to test the new workflow with the integration. |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>4 - Executing the process</summary>\n\n<br/>\n\n| **4.1** | **Execute the new account process with integration** |\n| :--- | :--- |\n| **Narration** | The bank is ready to do end-to-end testing of the new workflow. They start by making a new request. <br/><br/> The bank uses Workplace to initiate the new account request. |\n| **Action** &nbsp; 4.1.1 | Return to the **Workplace** window, and click the **Start workflow** button. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-2.png\" width=\"800\" /> |\n| **Action** &nbsp; 4.1.2 | Click the **New Account (Enhance with Integration)** tile (1) and then **Launch** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-3.png\" width=\"800\" /> |\n| **Action** &nbsp; 4.1.3 | Select the **Account Type** and enter the **Customer Account Number**, **First Name**, and **Last Name** (1). Click **Next** (2). <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-4.png\" width=\"800\" /> |\n| **Action** &nbsp; 4.1.4 | Click **Done**. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-5.png\" width=\"800\" /> |\n| **Narration** | The bank sees that the request is now routed directly for approval. There is no longer the need to manually gather the account info. |\n| **Action** &nbsp; 4.1.5 | Run the most recent **Approve New Account Request** task by clicking the task name. <br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-enhancing-ba-with-integration/images/4-1-6.png\" width=\"800\" /> |\n| **Narration** | Within the *Approve Request* task, the bank sees the combined account information that was automatically gathered using the integration. The combined bank account details were automatically gathered from two-back systems in the background. This avoided the need for an account specialist to log in to each of them individually and manually collect this information. As Focus Bank grows and acquires additional banks, the integration can be extended and deployed without modifications to the workflow. |\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>Summary</summary>\n\n<br/>\n\nBy combining the Cloud Pak for Business Automation and Cloud Pak for Integration, Focus Bank enhanced the account opening process, resulting in lower costs, reduced turnaround time, and increased customer satisfaction.\n\n<br/>\n\nThank you for attending today’s demonstration.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n","fileAbsolutePath":"/home/runner/work/platinum-demos/platinum-demos/src/pages/300-enhancing-ba-with-integration/demo-script.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}