{"componentChunkName":"component---src-pages-300-watson-aiops-application-resource-management-demo-script-mdx","path":"/300-watson-aiops-application-resource-management/demo-script/","result":{"pageContext":{"frontmatter":{"title":"Application resource management 300-level live demo","description":"Application resource management 300-level live demo","tabs":["Demo preparation","Demo script"]},"relativePagePath":"/300-watson-aiops-application-resource-management/demo-script.mdx","titleType":"page","MdxNode":{"id":"932a8fc3-ea5a-59d3-844e-d4929e1f0323","children":[],"parent":"1c71a47d-44cc-5a03-8853-159eaf83b588","internal":{"content":"---\ntitle: Application resource management\n  300-level live demo\ndescription: Application resource management 300-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    Application resource management<br/> 300-level live demo\n  </span> );\n\n![banner](./images/ARM-GitHub-script-banner-12-15-21.jpg)\n\n<span id=\"top\"></span>\n\n<details>\n<summary>Introduction</summary>\n<br/>\n\nIn this growing digital economy, the application is the business. Application performance, therefore, is one of highest CIO priorities.\n\n<br/>\n\nHome Robots Inc. is a fully digital company selling innovative \"household chores\" robots globally via its RobotShop online marketplace. Clients browse and purchase through RobotShop's microservices-based cloud native app. Promotions and other marketing events, however, generate unpredictable load patterns. This often results in poor application performance and bad customer experiences. Without full stack visibility, IT Ops teams tend to either over or under-provision resources based on best guesses - which is highly inefficient, costly and risky.\n\n<br/>\n\nIn this demo, I'll show you how IBM Turbonomic, a solution based on Application Resource Management, helps SREs and IT Ops teams proactively assure application performance and operational efficiency across their mission critical deployments. We will:\n\n<br/>\n• See how Turbonomic stitches together a full-stack view from business applications to their supporting infrastructure <br/>\n• Examine the resource optimization recommendations generated by AI-based platform analytics <br/>\n• Demonstrate how to automate execution of platform-derived 'actions' <br/>\n\n<br/>\n\n**Note**: This demo will be focus on application resource management in private clouds.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>1 - Getting a global view of the applications and their infrastructure dependencies</summary>\n\n<br/>\n\n| **1.1** | **Ingest data from observability platforms and other sources** |\n| :--- | :--- |\n| **Narration** | Turbonomic requires configuration and operational performance data to make resource optimization recommendations. The more data the better.<br/><br/>The RobotShop application is being observed by Instana. Turbonomic ingests data from Instana and builds a common data model to stitch together a graphical view of the application and its resource dependencies. In the Turbonomic nomenclature, this is called the 'Supply Chain'. |\n| **Action** &nbsp; 1.1.1 | Click **Settings** (1) and select **Target Configurations** (2). Select **Instana** (3). <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/target-configurations.jpg\" width=\"800\" /> |\n\n| **1.2** | **Examine the global supply chain** |\n| :--- | :--- |\n| **Narration** | The global supply chain models the dynamic relationship of the managed application and its dependent infrastructure layers. |\n| **Action** &nbsp; 1.2.0 | Log in to the Turbonomic instance and click the home **On** button (1) in the upper left corner. **Note**: the next six steps will refer to the below graphic.<br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/global-supply-chain-6.jpg\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.1 | Hover over the **Business Application** entity (1), which shows the business applications that Turbonomic is aware of. The color of each circle reflects the current health of the entities: red represents performance recommendations, yellow represents efficiency recommendations, and green is healthy. |\n| **Action** &nbsp; 1.2.2 | Hover over the **Business Transaction** entity (2), which shows logical business functions that an end-user would execute (such as a purchase or add-to-cart). Business applications are composed of these business transactions. |\n| **Action** &nbsp; 1.2.3 | Hover over the **Service** entity (3). A service is basically a REST endpoint. Transactions use the services. |\n| **Action** &nbsp; 1.2.4 | Hover over the **Application Component** entity (4). Services are hosted and executed in an application component, like a JVM.\n| **Action** &nbsp; 1.2.5 | Hover over the **Container** (5). Application components run on a container platform like Kubernetes. |\n| **Action** &nbsp; 1.2.6 | Hover over the **Virtual Machine** entity (6). Application platforms are hosted in virtualized environments like vSphere. |\n\n| **1.3** | **Explore the top business applications** view |\n| :--- | :--- |\n| **Narration** | Turbonomic displays the applications in order of risk. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |\n| **Action** &nbsp; 1.3.1 | Click the **Business Applications** entity. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RobotShop-SLO-Violation-5.jpg\" width=\"800\" /> |\n| **Narration** | We see that the average response time is up.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br/><br/>The Application Resource Health bar indicates that there are some critical performance issues as well as some areas to improve efficiency. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br/>The Actions button enables you to take the recommended actions directly from Turbonomic. |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>2 - Drilling into the RobotShop application</summary>\n\n<br/>\n\n| **2.1** | **Examine RobotShop resource dependencies** |\n| :--- | :--- |\n| **Narration** | Now that we have a broad understanding of the global view, let's examine the health of RobotShop. This is called 'scoping'. |\n| **Action** &nbsp; 2.1.1 | Click the **RobotShop** link to scope to RobotShop.<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/2021-12-16_23-44-25.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.2 | Notice that we are scoped to RobotShop, with data coming from Instana. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RobotShop-Supply-Chain.jpg\" width=\"800\" /> |\n| **Narration** | The supply chain is scoped to RobotShop, and the charts provide a quick view of RobotShop's overall operating health.<br/><br/>Since RobotShop is a Kubernetes-based cloud native application, all the entities in the supply chain are specific to a container infrastructure. |\n| **Action** &nbsp; 2.1.3 | On the **Pending Actions** chart, click **Show All**.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/pending-actions-show-all-6.png\" width=\"800\" /> |\n| **Narration** | The Turbonomic engine performs an ongoing (real time) holistic analysis of the environment, generating actions that you can take to resolve and avoid emerging problems. <br/><br/>Here we see container resize actions, categorized as 'performance' and 'efficiency' actions. These are displayed for you to either investigate further or execute manually.<br/><br/>Container resize up actions are typically performance-centric actions that are driven to resolve an underlying resource congestion issue. Container resize down actions are typically efficiency-centric actions that are pointing to a resource optimization opportunity, likely a consequence of resource over-provisioning. |\n| **Action** &nbsp; 2.1.4 | On the **Action Center** panel, select **Workload Controller** (1), then select the **cart** service (2), and click **Details** (3). <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Performance-Action-Details-6.jpg\" width=\"800\" /> |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>3 - Understanding the resource optimization recommendations </summary>\n\n<br/>\n\n| **3.1** | **Analyze a Performance Recommendation** |\n| :--- | :--- |\n| **Narration** | Let's explore one of the performance recommendations in more detail. |\n| **Action** &nbsp; 3.1.1 | On the **Action Details** page, click **Expand Details** to inspect the rationale behind the recommendations.<br/> <br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Expand-Performance-Action-Details.png\" width=\"800\" /> |\n| **Narration** | The graphs show an imminent congestion for the RobotShop card pod, based on the a percentile analysis from the last 30 days observation period. Turbonomic recommends upsizing the existing memory from 100 MB to 228 MB. The analysis shows that if this action is taken, it will result in a reduction of memory utilization from 82% to 36%. This memory upsizing will mitigate the detected risk of congestion for memory resources. |\n| **Action** &nbsp; 3.1.2 | Review the **performance action** details.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/performance-action-details.png\" width=\"800\" /> |\n\n| **3.2** | **Analyze an Efficiency Recommendation** |\n| :--- | :--- |\n| **Narration** | When the architect initially does sizing, the values are based on best guesses and taking a safer path - typically resulting in the over-provisioning of resources. There is often opportunity to reclaim unused expensive resources and save costs. |\n| **Action** &nbsp; 3.2.1 | On the **Action Center** panel, select Workload Controllers, then select the **ratings service** and click **Details**. <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Efficiency-Action-Details.jpg\" width=\"800\" /> |\n| **Narration** | The Turbonomic platform has discovered that the RobotShop ratings service is over-provisioned with memory. An efficiency recommendation is being made to reduce the memory of the ratings pod from 1 GB to 232 MB. The downsizing will improve memory utilization from 11% to 47.4%, without impacting overall service performance. <br/><br/> In addition to all the detailed analytics behind the recommendation, observe that Turbonomic is able to take the remedial action without having to jump to other tools or involve other cumbersome IT processes. |\n| **Action** &nbsp; 3.2.2 | Click the **x** in the upper right corner to close the **Action Details** page.<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Effciency-Ratings-Expand-Actions-5.jpg\" width=\"800\" /> |\n\n| **3.3** | **Analyze a Workload Consolidation recommendation** |\n| :--- | :--- |\n| **Narration** | The performance of a service depends on the availability of compute resources to the encapsulating pod. The pod runs on a node, so the performance and efficiency of the node matters. We will see how Turbonomic intelligently and proactively redistributes workloads in real time to better optimize the full stack. |\n| **Action** &nbsp; 3.3.1 | On the **RobotShop** supply chain, click **Namespace**.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RobotShop-Namespace.png\" width=\"500\" />\n| **Narration** | A Namespace is a logical pool of resources that manages workloads. The Capacity and Usage chart provides a quick view into quotas set on this cluster, and the relative utilization of the resources. These quotas serve as the guardrails when making container sizing decisions. The Top Services chart shows that the RobotShop rabbitmq service can benefit from some performance and efficiency actions. |\n| **Action** &nbsp; 3.3.2 | On the **Service-robot-shop/rabbitmq** row, click **Actions**.<br/><br/>  <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RabbitMQ-Actions-Click.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.3.3 | Under **Move**, select **Container Pods** (1), then click **Details** (2) in the **robotshop/rabbitmq** line.<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/action-center.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.3.4 | Review the analytics behind the workload consolidation recommendation.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/rabbitmq-Action-Details-1.png\" width=\"800\" /> |\n| **Narration** | The overall benefit of this recommendation is the ability to consolidate workloads on a fewer number of nodes and thereby drive down operational costs. This Move action will approximately double the resource utilization on worker node7 - increasing memory usage from 12% to 24% and CPU utilization from 6% to 11%. <br/><br/>Turbonomic analysis indicates that worker node1, currently hosting the RoboShop rabbitmq service, is under-utilized and by moving this pod to worker node7, overall cluster efficiency can be improved. |\n \n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>4 - Automating actions</summary>\n\n<br/>\n\n| **4.1** | **Automate action execution and eliminate manual intervention** |\n| :--- | :--- |\n| **Narration** | Though Turbonomic allows you to take action from the platform with the click of a button, it is a best practice to automate these actions. <br/><br/>We will now define an automation policy that enables you to automate the platform-derived actions. |\n| **Action** &nbsp; 4.1.1 | From **Settings**, click **Policies**. Click **New Automation Policy**. Select **Container Pod**. |\n| **Action** &nbsp; 4.1.2 | We will give the policy a name (1), schedule (2), and then define how an action is accepted (3). <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Automation-Policy-1.jpg\" width=\"500\" /> |\n| **Action** &nbsp; 4.1.3 | Fill out the **Action and Orchestration** panel.<br/><br/> Define the **Action Types** that will be automated by this automation policy: **Move**, **Suspend**, **Provision** (1).<br/><br/>Set **Action Generation** to **Generate Actions** (2).<br/><br/>Set **Action Acceptance** to **Automatic** (3).<br/><br/>**Do not** click **Submit**, as this is an read-only environment.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Automation-Policy-2.jpg\" width=\"500\" /> |\n| **Narration** | Once the Automation Policy is saved, it will go into effect. All configured actions will now be executed automatically.<br/><br/>The main benefit and best practice of Turbonomic is to execute an increasing number of actions automatically. Removing human intervention and leveraging automation will maintain application performance and improve operational efficiency. |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>Summary</summary>\n\n<br/>\n\nIn this demo we showed you how Turbonomic can assure the performance of your applications and improve the operational efficiency of the supporting application infrastructure. Using RobotShop, we walked through examples of how Turbonomic can augment the well-known benefits of a container platform to provide additional and high-value capabilities - ranging from intelligent container right sizing and SLA management to over-provisioning and cluster-wide workload consolidation.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n","type":"Mdx","contentDigest":"8a55c40f083d0cc55143eb2fc00624b8","owner":"gatsby-plugin-mdx","counter":2417},"frontmatter":{"title":"Application resource management 300-level live demo","description":"Application resource management 300-level live demo","tabs":["Demo preparation","Demo script"]},"exports":{},"rawBody":"---\ntitle: Application resource management\n  300-level live demo\ndescription: Application resource management 300-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    Application resource management<br/> 300-level live demo\n  </span> );\n\n![banner](./images/ARM-GitHub-script-banner-12-15-21.jpg)\n\n<span id=\"top\"></span>\n\n<details>\n<summary>Introduction</summary>\n<br/>\n\nIn this growing digital economy, the application is the business. Application performance, therefore, is one of highest CIO priorities.\n\n<br/>\n\nHome Robots Inc. is a fully digital company selling innovative \"household chores\" robots globally via its RobotShop online marketplace. Clients browse and purchase through RobotShop's microservices-based cloud native app. Promotions and other marketing events, however, generate unpredictable load patterns. This often results in poor application performance and bad customer experiences. Without full stack visibility, IT Ops teams tend to either over or under-provision resources based on best guesses - which is highly inefficient, costly and risky.\n\n<br/>\n\nIn this demo, I'll show you how IBM Turbonomic, a solution based on Application Resource Management, helps SREs and IT Ops teams proactively assure application performance and operational efficiency across their mission critical deployments. We will:\n\n<br/>\n• See how Turbonomic stitches together a full-stack view from business applications to their supporting infrastructure <br/>\n• Examine the resource optimization recommendations generated by AI-based platform analytics <br/>\n• Demonstrate how to automate execution of platform-derived 'actions' <br/>\n\n<br/>\n\n**Note**: This demo will be focus on application resource management in private clouds.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>1 - Getting a global view of the applications and their infrastructure dependencies</summary>\n\n<br/>\n\n| **1.1** | **Ingest data from observability platforms and other sources** |\n| :--- | :--- |\n| **Narration** | Turbonomic requires configuration and operational performance data to make resource optimization recommendations. The more data the better.<br/><br/>The RobotShop application is being observed by Instana. Turbonomic ingests data from Instana and builds a common data model to stitch together a graphical view of the application and its resource dependencies. In the Turbonomic nomenclature, this is called the 'Supply Chain'. |\n| **Action** &nbsp; 1.1.1 | Click **Settings** (1) and select **Target Configurations** (2). Select **Instana** (3). <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/target-configurations.jpg\" width=\"800\" /> |\n\n| **1.2** | **Examine the global supply chain** |\n| :--- | :--- |\n| **Narration** | The global supply chain models the dynamic relationship of the managed application and its dependent infrastructure layers. |\n| **Action** &nbsp; 1.2.0 | Log in to the Turbonomic instance and click the home **On** button (1) in the upper left corner. **Note**: the next six steps will refer to the below graphic.<br/><br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/global-supply-chain-6.jpg\" width=\"800\" /> |\n| **Action** &nbsp; 1.2.1 | Hover over the **Business Application** entity (1), which shows the business applications that Turbonomic is aware of. The color of each circle reflects the current health of the entities: red represents performance recommendations, yellow represents efficiency recommendations, and green is healthy. |\n| **Action** &nbsp; 1.2.2 | Hover over the **Business Transaction** entity (2), which shows logical business functions that an end-user would execute (such as a purchase or add-to-cart). Business applications are composed of these business transactions. |\n| **Action** &nbsp; 1.2.3 | Hover over the **Service** entity (3). A service is basically a REST endpoint. Transactions use the services. |\n| **Action** &nbsp; 1.2.4 | Hover over the **Application Component** entity (4). Services are hosted and executed in an application component, like a JVM.\n| **Action** &nbsp; 1.2.5 | Hover over the **Container** (5). Application components run on a container platform like Kubernetes. |\n| **Action** &nbsp; 1.2.6 | Hover over the **Virtual Machine** entity (6). Application platforms are hosted in virtualized environments like vSphere. |\n\n| **1.3** | **Explore the top business applications** view |\n| :--- | :--- |\n| **Narration** | Turbonomic displays the applications in order of risk. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |\n| **Action** &nbsp; 1.3.1 | Click the **Business Applications** entity. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RobotShop-SLO-Violation-5.jpg\" width=\"800\" /> |\n| **Narration** | We see that the average response time is up.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br/><br/>The Application Resource Health bar indicates that there are some critical performance issues as well as some areas to improve efficiency. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br/>The Actions button enables you to take the recommended actions directly from Turbonomic. |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>2 - Drilling into the RobotShop application</summary>\n\n<br/>\n\n| **2.1** | **Examine RobotShop resource dependencies** |\n| :--- | :--- |\n| **Narration** | Now that we have a broad understanding of the global view, let's examine the health of RobotShop. This is called 'scoping'. |\n| **Action** &nbsp; 2.1.1 | Click the **RobotShop** link to scope to RobotShop.<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/2021-12-16_23-44-25.png\" width=\"800\" /> |\n| **Action** &nbsp; 2.1.2 | Notice that we are scoped to RobotShop, with data coming from Instana. <br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RobotShop-Supply-Chain.jpg\" width=\"800\" /> |\n| **Narration** | The supply chain is scoped to RobotShop, and the charts provide a quick view of RobotShop's overall operating health.<br/><br/>Since RobotShop is a Kubernetes-based cloud native application, all the entities in the supply chain are specific to a container infrastructure. |\n| **Action** &nbsp; 2.1.3 | On the **Pending Actions** chart, click **Show All**.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/pending-actions-show-all-6.png\" width=\"800\" /> |\n| **Narration** | The Turbonomic engine performs an ongoing (real time) holistic analysis of the environment, generating actions that you can take to resolve and avoid emerging problems. <br/><br/>Here we see container resize actions, categorized as 'performance' and 'efficiency' actions. These are displayed for you to either investigate further or execute manually.<br/><br/>Container resize up actions are typically performance-centric actions that are driven to resolve an underlying resource congestion issue. Container resize down actions are typically efficiency-centric actions that are pointing to a resource optimization opportunity, likely a consequence of resource over-provisioning. |\n| **Action** &nbsp; 2.1.4 | On the **Action Center** panel, select **Workload Controller** (1), then select the **cart** service (2), and click **Details** (3). <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Performance-Action-Details-6.jpg\" width=\"800\" /> |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>3 - Understanding the resource optimization recommendations </summary>\n\n<br/>\n\n| **3.1** | **Analyze a Performance Recommendation** |\n| :--- | :--- |\n| **Narration** | Let's explore one of the performance recommendations in more detail. |\n| **Action** &nbsp; 3.1.1 | On the **Action Details** page, click **Expand Details** to inspect the rationale behind the recommendations.<br/> <br/><img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Expand-Performance-Action-Details.png\" width=\"800\" /> |\n| **Narration** | The graphs show an imminent congestion for the RobotShop card pod, based on the a percentile analysis from the last 30 days observation period. Turbonomic recommends upsizing the existing memory from 100 MB to 228 MB. The analysis shows that if this action is taken, it will result in a reduction of memory utilization from 82% to 36%. This memory upsizing will mitigate the detected risk of congestion for memory resources. |\n| **Action** &nbsp; 3.1.2 | Review the **performance action** details.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/performance-action-details.png\" width=\"800\" /> |\n\n| **3.2** | **Analyze an Efficiency Recommendation** |\n| :--- | :--- |\n| **Narration** | When the architect initially does sizing, the values are based on best guesses and taking a safer path - typically resulting in the over-provisioning of resources. There is often opportunity to reclaim unused expensive resources and save costs. |\n| **Action** &nbsp; 3.2.1 | On the **Action Center** panel, select Workload Controllers, then select the **ratings service** and click **Details**. <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Efficiency-Action-Details.jpg\" width=\"800\" /> |\n| **Narration** | The Turbonomic platform has discovered that the RobotShop ratings service is over-provisioned with memory. An efficiency recommendation is being made to reduce the memory of the ratings pod from 1 GB to 232 MB. The downsizing will improve memory utilization from 11% to 47.4%, without impacting overall service performance. <br/><br/> In addition to all the detailed analytics behind the recommendation, observe that Turbonomic is able to take the remedial action without having to jump to other tools or involve other cumbersome IT processes. |\n| **Action** &nbsp; 3.2.2 | Click the **x** in the upper right corner to close the **Action Details** page.<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Effciency-Ratings-Expand-Actions-5.jpg\" width=\"800\" /> |\n\n| **3.3** | **Analyze a Workload Consolidation recommendation** |\n| :--- | :--- |\n| **Narration** | The performance of a service depends on the availability of compute resources to the encapsulating pod. The pod runs on a node, so the performance and efficiency of the node matters. We will see how Turbonomic intelligently and proactively redistributes workloads in real time to better optimize the full stack. |\n| **Action** &nbsp; 3.3.1 | On the **RobotShop** supply chain, click **Namespace**.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RobotShop-Namespace.png\" width=\"500\" />\n| **Narration** | A Namespace is a logical pool of resources that manages workloads. The Capacity and Usage chart provides a quick view into quotas set on this cluster, and the relative utilization of the resources. These quotas serve as the guardrails when making container sizing decisions. The Top Services chart shows that the RobotShop rabbitmq service can benefit from some performance and efficiency actions. |\n| **Action** &nbsp; 3.3.2 | On the **Service-robot-shop/rabbitmq** row, click **Actions**.<br/><br/>  <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/RabbitMQ-Actions-Click.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.3.3 | Under **Move**, select **Container Pods** (1), then click **Details** (2) in the **robotshop/rabbitmq** line.<br/><br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/action-center.png\" width=\"800\" /> |\n| **Action** &nbsp; 3.3.4 | Review the analytics behind the workload consolidation recommendation.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/rabbitmq-Action-Details-1.png\" width=\"800\" /> |\n| **Narration** | The overall benefit of this recommendation is the ability to consolidate workloads on a fewer number of nodes and thereby drive down operational costs. This Move action will approximately double the resource utilization on worker node7 - increasing memory usage from 12% to 24% and CPU utilization from 6% to 11%. <br/><br/>Turbonomic analysis indicates that worker node1, currently hosting the RoboShop rabbitmq service, is under-utilized and by moving this pod to worker node7, overall cluster efficiency can be improved. |\n \n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>4 - Automating actions</summary>\n\n<br/>\n\n| **4.1** | **Automate action execution and eliminate manual intervention** |\n| :--- | :--- |\n| **Narration** | Though Turbonomic allows you to take action from the platform with the click of a button, it is a best practice to automate these actions. <br/><br/>We will now define an automation policy that enables you to automate the platform-derived actions. |\n| **Action** &nbsp; 4.1.1 | From **Settings**, click **Policies**. Click **New Automation Policy**. Select **Container Pod**. |\n| **Action** &nbsp; 4.1.2 | We will give the policy a name (1), schedule (2), and then define how an action is accepted (3). <br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Automation-Policy-1.jpg\" width=\"500\" /> |\n| **Action** &nbsp; 4.1.3 | Fill out the **Action and Orchestration** panel.<br/><br/> Define the **Action Types** that will be automated by this automation policy: **Move**, **Suspend**, **Provision** (1).<br/><br/>Set **Action Generation** to **Generate Actions** (2).<br/><br/>Set **Action Acceptance** to **Automatic** (3).<br/><br/>**Do not** click **Submit**, as this is an read-only environment.<br/> <br/> <img src=\"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-watson-aiops-application-resource-management/images/Automation-Policy-2.jpg\" width=\"500\" /> |\n| **Narration** | Once the Automation Policy is saved, it will go into effect. All configured actions will now be executed automatically.<br/><br/>The main benefit and best practice of Turbonomic is to execute an increasing number of actions automatically. Removing human intervention and leveraging automation will maintain application performance and improve operational efficiency. |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n\n<summary>Summary</summary>\n\n<br/>\n\nIn this demo we showed you how Turbonomic can assure the performance of your applications and improve the operational efficiency of the supporting application infrastructure. Using RobotShop, we walked through examples of how Turbonomic can augment the well-known benefits of a container platform to provide additional and high-value capabilities - ranging from intelligent container right sizing and SLA management to over-provisioning and cluster-wide workload consolidation.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n","fileAbsolutePath":"/home/runner/work/platinum-demos/platinum-demos/src/pages/300-watson-aiops-application-resource-management/demo-script.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}