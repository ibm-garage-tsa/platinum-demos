{"componentChunkName":"component---src-pages-100-business-automation-demo-script-mdx","path":"/100-business-automation/demo-script/","result":{"pageContext":{"frontmatter":{"title":"Straight-through processing 100-level live demo","description":"Straight-through processing 100-level live demo","tabs":["Demo preparation","Demo script"]},"relativePagePath":"/100-business-automation/demo-script.mdx","titleType":"page","MdxNode":{"id":"83e31b57-b056-57d4-907f-35f677570054","children":[],"parent":"a4da6b62-cfad-5404-9d26-2b03416bded1","internal":{"content":"---\ntitle: Straight-through processing\n  100-level live demo\ndescription: Straight-through processing 100-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    Straight-through processing <br/> 100-level live demo\n  </span> );\n\n![banner](./images/BA_STP_100_Script_GitHub_banner_8-3-21_short.jpg)\n\n<span id=\"top\"></span>\n\n<details>\n\n<summary>Introduction</summary>\n<br/>\n\nWelcome to the straight-through processing demonstration.\n\n<br/>\n\nToday, I will demonstrate how the IBM Cloud Pak for Business Automation supports straight-through processing to automate customer refund requests quickly and easily. We’ll take advantage of the Pak’s workflow and decision management features - along with its operational intelligence capabilities - to show how business users can lead the effort to transform customer service. Let’s get started.\n\n<br/>\n\n(Printer-ready PDF of demo script <a href=\"./100-BA-STP-Demo-Script.pdf\" target=\"_blank\" rel=\"noreferrer\">here</a>)\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>1 - Executing workflow with straight-through processing</summary>\n<br/>\n\n| **1.1** | **Refund request approved** |\n| :--- | :--- |\n| **Actions** | Go to Focus Corp's **Your Returns and Refunds** page<br/><br/>Click to select an order. Of the three orders that display, click on the refund request ending in '**AP**.'<br/><br/>Click **Submit Request** to process the refund. The process executes and generates a refund-approved result. |\n| **Narration** | Let’s look at how straight-through processing transforms the refund process. In this first example, when the customer submits the refund request, the criteria is evaluated by the refund decision, and the approval is granted in real time, avoiding a time-consuming manual investigation. |\n| **Screenshots** | <br/> ![Step_1.1_action_2](./images/Step_4.1_action_2_600.png) <br/> ![Step_1.1_action_2_1](./images/Step_4.1_action_3_600.png) <br/> ![Step_1.1_results_screen](./images/Step_4.1_results_screen_600.png) |\n\n| **1.2** | **Refund request denied** |\n| :--- | :--- |\n| **Actions** | Click on **Submit Another Refund Request** <br/><br/>Click to select an order. Of the three orders that display, click on the refund request ending in '**DE**.' <br/><br/>Click **Submit Request** to process the refund. The process executes and generates a refund-denied result. |\n| **Narration** | Let’s look at a second example. This one did not meet our criteria and resulted in a denial because it was outside the time window. While this refund request resulted in a denial, it is still straight-through processing because there is no manual work. |\n| **Screenshots** | <br/> ![Step_1.2_action_1](./images/Step_4.2_action_1_600.png) <br/> ![Step_1.2_action_2](./images/Step_4.2_action_2_600.png) <br/> ![Step_1.2_action_2_1](./images/Step_4.2_action_3_600.png)<br/> ![Step_1.2_results_screen](./images/Step_4.2_results_screen_600.png) |\n\n| **1.3** | **Refund request requires manual investigation** |\n| :--- | :--- |\n| **Actions** | Click on **Submit Another Refund Request** <br/><br/>Click to select an order. Of the three orders that display, click on the refund request ending in ‘**MA**.’ <br/><br/>Click **Submit Request** to process the refund. The process executes and generates a refund investigation result. |\n| **Narration** | But what if the business rules determine this request requires investigation? In that case, workflow would route the request to our customer service agent to do the investigation. |\n| **Screenshots** | <br/> ![Step_1.3_action_1](./images/Step_4.3_action_1_600.png)<br/> ![Step_1.3_action_2](./images/Step_4.3_action_2_600.png) <br/>![Step_1.3_action_2_1](./images/Step_4.3_action_3_600.png) <br/> ![Step_1.3_results_screen](./images/Step_4.3_results_screen_600.png) |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>2 - Monitoring operational intelligence</summary>\n<br/>\n\n| **2.1** | **Review the refund dashboard** |\n| :--- | :--- |\n| **Actions** | Click on the **Refund Dashboard** tab, which you opened in the demo preparation. In this step, you are just speaking to the displayed dashboard. |\n| **Narration** | Let’s look at the refund dashboard to see how much straight-through processing we’ve achieved. So far, the percentage of manually processed requests is still above 70%, with the average manual investigation taking over two hours.<br/><br/>Let’s look at what’s behind this dashboard.<br/><br/>First, as the refund process runs, the system can collect and process historical data and make it available for visualization.<br/><br/>Next, we provide the Business Performance Center, a no-code monitoring application for the IBM Cloud Pak for Business Automation. Dashboards can be designed and shared in minutes that provide insight into important business activities and processes. You can prepare, track, and design visualizations of metrics, key performance indicators (KPIs), and other measurements of business performance in customizable dashboards.<br/><br/>Additionally, the historical data can be used to feed a data lake to apply machine learning to our automations. For example, to make even more sophisticated refund decisions, we could use a data lake to incorporate machine learning into our refund process. The Cloud Pak for Business Automation includes some machine learning samples to help you get started. |\n| **Screenshot** | <br/> ![Step_2.1_action_1](./images/Step_5.1_action_1_600.png) |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>3 - Model decisions</summary>\n<br/>\n\n| **3.1** | **Review the refund approval decision model** |\n| :--- | :--- |\n| **Actions** | Go to your **Decision Center**, having already logged in with your credentials if necessary<br/><br/>Click on the decision service named **Refund Processing**<br/><br/>When the **Refund Processing** decision screen appears, click on **main**<br/><br/>The next screen has several blue tabs at the top. Click on **Decision Model**.<br/><br/>Click on **Validate Time Window** in the decision diagram<br/><br/>Click on **Validate Time Window** in the Decision Logic section on the left side of the screen<br/><br/>**Note:** This opens a rule table based on the refund reason, day since order, and goods condition<br/><br/>Close the **Validate Time Window** table<br/><br/>Click on **Validate Type of Goods** in the decision diagram<br/><br/>Click on **Validate Type of Goods** in the Decision Logic section on the left side of the screen<br/><br/>**Note**: This opens a rule table based on goods type and goods condition<br/><br/>Close the **Validate Type of Goods** window <br/><br/>Click on **Final Refund Decision** in the decision diagram<br/><br/>Click on **Manual Decision** in the Decision Logic section on the left side of the screen<br/><br/>**Note:** This opens a rule script based on goods type and goods condition<br/> <br/>Close the **Manual Decision** rule logic window |\n| **Narration** | Let’s look at how the business analyst can create and manage business rules to further increase straight-through processing. The business rules replicate how experts make refund decisions.<br/><br/>Using no-code decision modeling, business analysts can easily author and test refund decision criteria.<br/><br/>This is the decision model for the refund request decision service. A decision model uses a diagram to break the decision down into sub-decisions, which all contribute to the final refund decision.<br/><br/>To automate the refund request process, we’ve used two decision tables. A decision table groups rules that have similar conditions and actions but use different thresholds.<br/><br/>The first decision table considers the customer’s reason for return, the days since delivery, and the condition of the item. These are the same criteria that a customer service agent would have used to make a refund request decision, but now, the decision is automated and executes in real time.<br/><br/>The second sub-decision has a table that considers the type of item being returned.<br/><br/> We’ve combined the two sub-decisions to make the final response using a simple text rule.<br/><br/>Business analysts can change the rules to achieve higher levels of straight-through processing or to adapt to changing business conditions. |\n| **Screenshots** | <br/> ![Step_3.1_action_2](./images/Step_6.1_action_2_600.png) <br/> ![Step_3.1_action_3](./images/Step_6.1_action_3_600.png)<br/> ![Step_3.1_action_4](./images/Step_6.1_action_4_600.png)<br/> ![Step_3.1_action_5](./images/Step_6.1_action_5_600.png)<br/> ![Step_3.1_action_6](./images/Step_6.1_action_6_600.png)<br/> ![Step_3.1_action_7](./images/Step_6.1_action_7_600.png)<br/> ![Step_3.1_action_8](./images/Step_6.1_action_8_600.png)<br/> ![Step_3.1_action_9](./images/Step_6.1_action_9_600.png)<br/> ![Step_3.1_action_10](./images/Step_6.1_action_10_600.png)<br/> ![Step_3.1_action_11](./images/Step_6.1_action_11_600.png)<br/> ![Step_3.1_action_12](./images/Step_6.1_action_12_600.png)<br/> ![Step_3.1_action_13](./images/Step_6.1_action_13_600.png) |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>Summary</summary>\n<br/>\n\nUsing the Cloud Pak for Business Automation, we had all the capabilities needed to significantly reduce the amount of manual refund processing. We combined workflow and decision automation to increase straight-through processing, which resulted in a lower average completion time, lower costs, and more consistent customer communication throughout the process.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n","type":"Mdx","contentDigest":"f1bc28282fd297a2a3552ef6c53a2514","owner":"gatsby-plugin-mdx","counter":2325},"frontmatter":{"title":"Straight-through processing 100-level live demo","description":"Straight-through processing 100-level live demo","tabs":["Demo preparation","Demo script"]},"exports":{},"rawBody":"---\ntitle: Straight-through processing\n  100-level live demo\ndescription: Straight-through processing 100-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    Straight-through processing <br/> 100-level live demo\n  </span> );\n\n![banner](./images/BA_STP_100_Script_GitHub_banner_8-3-21_short.jpg)\n\n<span id=\"top\"></span>\n\n<details>\n\n<summary>Introduction</summary>\n<br/>\n\nWelcome to the straight-through processing demonstration.\n\n<br/>\n\nToday, I will demonstrate how the IBM Cloud Pak for Business Automation supports straight-through processing to automate customer refund requests quickly and easily. We’ll take advantage of the Pak’s workflow and decision management features - along with its operational intelligence capabilities - to show how business users can lead the effort to transform customer service. Let’s get started.\n\n<br/>\n\n(Printer-ready PDF of demo script <a href=\"./100-BA-STP-Demo-Script.pdf\" target=\"_blank\" rel=\"noreferrer\">here</a>)\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>1 - Executing workflow with straight-through processing</summary>\n<br/>\n\n| **1.1** | **Refund request approved** |\n| :--- | :--- |\n| **Actions** | Go to Focus Corp's **Your Returns and Refunds** page<br/><br/>Click to select an order. Of the three orders that display, click on the refund request ending in '**AP**.'<br/><br/>Click **Submit Request** to process the refund. The process executes and generates a refund-approved result. |\n| **Narration** | Let’s look at how straight-through processing transforms the refund process. In this first example, when the customer submits the refund request, the criteria is evaluated by the refund decision, and the approval is granted in real time, avoiding a time-consuming manual investigation. |\n| **Screenshots** | <br/> ![Step_1.1_action_2](./images/Step_4.1_action_2_600.png) <br/> ![Step_1.1_action_2_1](./images/Step_4.1_action_3_600.png) <br/> ![Step_1.1_results_screen](./images/Step_4.1_results_screen_600.png) |\n\n| **1.2** | **Refund request denied** |\n| :--- | :--- |\n| **Actions** | Click on **Submit Another Refund Request** <br/><br/>Click to select an order. Of the three orders that display, click on the refund request ending in '**DE**.' <br/><br/>Click **Submit Request** to process the refund. The process executes and generates a refund-denied result. |\n| **Narration** | Let’s look at a second example. This one did not meet our criteria and resulted in a denial because it was outside the time window. While this refund request resulted in a denial, it is still straight-through processing because there is no manual work. |\n| **Screenshots** | <br/> ![Step_1.2_action_1](./images/Step_4.2_action_1_600.png) <br/> ![Step_1.2_action_2](./images/Step_4.2_action_2_600.png) <br/> ![Step_1.2_action_2_1](./images/Step_4.2_action_3_600.png)<br/> ![Step_1.2_results_screen](./images/Step_4.2_results_screen_600.png) |\n\n| **1.3** | **Refund request requires manual investigation** |\n| :--- | :--- |\n| **Actions** | Click on **Submit Another Refund Request** <br/><br/>Click to select an order. Of the three orders that display, click on the refund request ending in ‘**MA**.’ <br/><br/>Click **Submit Request** to process the refund. The process executes and generates a refund investigation result. |\n| **Narration** | But what if the business rules determine this request requires investigation? In that case, workflow would route the request to our customer service agent to do the investigation. |\n| **Screenshots** | <br/> ![Step_1.3_action_1](./images/Step_4.3_action_1_600.png)<br/> ![Step_1.3_action_2](./images/Step_4.3_action_2_600.png) <br/>![Step_1.3_action_2_1](./images/Step_4.3_action_3_600.png) <br/> ![Step_1.3_results_screen](./images/Step_4.3_results_screen_600.png) |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>2 - Monitoring operational intelligence</summary>\n<br/>\n\n| **2.1** | **Review the refund dashboard** |\n| :--- | :--- |\n| **Actions** | Click on the **Refund Dashboard** tab, which you opened in the demo preparation. In this step, you are just speaking to the displayed dashboard. |\n| **Narration** | Let’s look at the refund dashboard to see how much straight-through processing we’ve achieved. So far, the percentage of manually processed requests is still above 70%, with the average manual investigation taking over two hours.<br/><br/>Let’s look at what’s behind this dashboard.<br/><br/>First, as the refund process runs, the system can collect and process historical data and make it available for visualization.<br/><br/>Next, we provide the Business Performance Center, a no-code monitoring application for the IBM Cloud Pak for Business Automation. Dashboards can be designed and shared in minutes that provide insight into important business activities and processes. You can prepare, track, and design visualizations of metrics, key performance indicators (KPIs), and other measurements of business performance in customizable dashboards.<br/><br/>Additionally, the historical data can be used to feed a data lake to apply machine learning to our automations. For example, to make even more sophisticated refund decisions, we could use a data lake to incorporate machine learning into our refund process. The Cloud Pak for Business Automation includes some machine learning samples to help you get started. |\n| **Screenshot** | <br/> ![Step_2.1_action_1](./images/Step_5.1_action_1_600.png) |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>3 - Model decisions</summary>\n<br/>\n\n| **3.1** | **Review the refund approval decision model** |\n| :--- | :--- |\n| **Actions** | Go to your **Decision Center**, having already logged in with your credentials if necessary<br/><br/>Click on the decision service named **Refund Processing**<br/><br/>When the **Refund Processing** decision screen appears, click on **main**<br/><br/>The next screen has several blue tabs at the top. Click on **Decision Model**.<br/><br/>Click on **Validate Time Window** in the decision diagram<br/><br/>Click on **Validate Time Window** in the Decision Logic section on the left side of the screen<br/><br/>**Note:** This opens a rule table based on the refund reason, day since order, and goods condition<br/><br/>Close the **Validate Time Window** table<br/><br/>Click on **Validate Type of Goods** in the decision diagram<br/><br/>Click on **Validate Type of Goods** in the Decision Logic section on the left side of the screen<br/><br/>**Note**: This opens a rule table based on goods type and goods condition<br/><br/>Close the **Validate Type of Goods** window <br/><br/>Click on **Final Refund Decision** in the decision diagram<br/><br/>Click on **Manual Decision** in the Decision Logic section on the left side of the screen<br/><br/>**Note:** This opens a rule script based on goods type and goods condition<br/> <br/>Close the **Manual Decision** rule logic window |\n| **Narration** | Let’s look at how the business analyst can create and manage business rules to further increase straight-through processing. The business rules replicate how experts make refund decisions.<br/><br/>Using no-code decision modeling, business analysts can easily author and test refund decision criteria.<br/><br/>This is the decision model for the refund request decision service. A decision model uses a diagram to break the decision down into sub-decisions, which all contribute to the final refund decision.<br/><br/>To automate the refund request process, we’ve used two decision tables. A decision table groups rules that have similar conditions and actions but use different thresholds.<br/><br/>The first decision table considers the customer’s reason for return, the days since delivery, and the condition of the item. These are the same criteria that a customer service agent would have used to make a refund request decision, but now, the decision is automated and executes in real time.<br/><br/>The second sub-decision has a table that considers the type of item being returned.<br/><br/> We’ve combined the two sub-decisions to make the final response using a simple text rule.<br/><br/>Business analysts can change the rules to achieve higher levels of straight-through processing or to adapt to changing business conditions. |\n| **Screenshots** | <br/> ![Step_3.1_action_2](./images/Step_6.1_action_2_600.png) <br/> ![Step_3.1_action_3](./images/Step_6.1_action_3_600.png)<br/> ![Step_3.1_action_4](./images/Step_6.1_action_4_600.png)<br/> ![Step_3.1_action_5](./images/Step_6.1_action_5_600.png)<br/> ![Step_3.1_action_6](./images/Step_6.1_action_6_600.png)<br/> ![Step_3.1_action_7](./images/Step_6.1_action_7_600.png)<br/> ![Step_3.1_action_8](./images/Step_6.1_action_8_600.png)<br/> ![Step_3.1_action_9](./images/Step_6.1_action_9_600.png)<br/> ![Step_3.1_action_10](./images/Step_6.1_action_10_600.png)<br/> ![Step_3.1_action_11](./images/Step_6.1_action_11_600.png)<br/> ![Step_3.1_action_12](./images/Step_6.1_action_12_600.png)<br/> ![Step_3.1_action_13](./images/Step_6.1_action_13_600.png) |\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n\n<details>\n<summary>Summary</summary>\n<br/>\n\nUsing the Cloud Pak for Business Automation, we had all the capabilities needed to significantly reduce the amount of manual refund processing. We combined workflow and decision automation to increase straight-through processing, which resulted in a lower average completion time, lower costs, and more consistent customer communication throughout the process.\n\n<br/>\n\n**[Go to top](#top)**\n\n</details>\n","fileAbsolutePath":"/home/runner/work/platinum-demos/platinum-demos/src/pages/100-business-automation/demo-script.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}