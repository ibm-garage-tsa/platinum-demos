(window.webpackJsonp=window.webpackJsonp||[]).push([[61,37,38,84],{"013z":function(e,t,a){"use strict";var n=a("q1tI"),r=a.n(n),i=a("NmYn"),o=a.n(i),b=a("Wbzz"),s=a("Xrax"),l=a("k4MR"),c=a("TSYQ"),m=a.n(c),d=a("QH2O"),p=a.n(d),g=a("qKvR"),h=function(e){var t,a=e.title,n=e.theme,r=e.tabs,i=void 0===r?[]:r;return Object(g.b)("div",{className:m()(p.a.pageHeader,(t={},t[p.a.withTabs]=i.length,t[p.a.darkMode]="dark"===n,t))},Object(g.b)("div",{className:"bx--grid"},Object(g.b)("div",{className:"bx--row"},Object(g.b)("div",{className:"bx--col-lg-12"},Object(g.b)("h1",{id:"page-title",className:p.a.text},a)))))},u=a("BAC9"),j=function(e){var t=e.relativePagePath,a=e.repository,n=Object(b.useStaticQuery)("1364590287").site.siteMetadata.repository,r=a||n,i=r.baseUrl,o=r.subDirectory,s=i+"/edit/"+r.branch+o+"/src/pages"+t;return i?Object(g.b)("div",{className:"bx--row "+u.row},Object(g.b)("div",{className:"bx--col"},Object(g.b)("a",{className:u.link,href:s},"Edit this page on GitHub"))):null},O=a("FCXl"),f=a("dI71"),N=a("I8xM"),y=function(e){function t(){return e.apply(this,arguments)||this}return Object(f.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,n=e.slug,r=n.split("/").filter(Boolean).slice(-1)[0],i=a.map((function(e){var t,a=o()(e,{lower:!0,strict:!0}),i=a===r,s=new RegExp(r+"/?(#.*)?$"),l=n.replace(s,a);return Object(g.b)("li",{key:e,className:m()((t={},t[N.selectedItem]=i,t),N.listItem)},Object(g.b)(b.Link,{className:N.link,to:""+l},e))}));return Object(g.b)("div",{className:N.tabsContainer},Object(g.b)("div",{className:"bx--grid"},Object(g.b)("div",{className:"bx--row"},Object(g.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(g.b)("nav",{"aria-label":t},Object(g.b)("ul",{className:N.list},i))))))},t}(r.a.Component),w=a("MjG9"),v=a("CzIb"),A=a("Asxa"),I=a("OIbQ"),k=a.n(I),x=function(e){var t=e.date,a=new Date(t);return t?Object(g.b)(A.c,{className:k.a.row},Object(g.b)(A.a,null,Object(g.b)("div",{className:k.a.text},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,a=e.children,n=e.location,r=e.Title,i=t.frontmatter,c=void 0===i?{}:i,m=t.relativePagePath,d=t.titleType,p=c.tabs,u=c.title,f=c.theme,N=c.description,A=c.keywords,I=c.date,k=Object(v.a)().interiorTheme,P=Object(b.useStaticQuery)("2456312558").site.pathPrefix,T=P?n.pathname.replace(P,""):n.pathname,E=p?T.split("/").filter(Boolean).slice(-1)[0]||o()(p[0],{lower:!0}):"",M=f||k;return Object(g.b)(l.a,{tabs:p,homepage:!1,theme:M,pageTitle:u,pageDescription:N,pageKeywords:A,titleType:d},Object(g.b)(h,{title:r?Object(g.b)(r,null):u,label:"label",tabs:p,theme:M}),p&&Object(g.b)(y,{title:u,slug:T,tabs:p,currentTab:E}),Object(g.b)(w.a,{padded:!0},a,Object(g.b)(j,{relativePagePath:m}),Object(g.b)(x,{date:I})),Object(g.b)(O.a,{pageContext:t,location:n,slug:T,tabs:p,currentTab:E}),Object(g.b)(s.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,a){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},Ul19:function(e,t,a){"use strict";a.r(t),a.d(t,"Title",(function(){return l})),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return g}));var n,r=a("wx14"),i=a("zLVn"),o=(a("q1tI"),a("7ljp")),b=a("013z"),s=(a("qKvR"),["components"]),l=function(){return Object(o.b)("span",null,Object(o.b)("h1",{style:{fontSize:"60px"}},"Managing events and APIs from a unified environment ",Object(o.b)("br",null)," 300-level live demo"))},c={},m=(n="InlineNotification",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",e)}),d={Title:l,_frontmatter:c},p=b.a;function g(e){var t=e.components,a=Object(i.a)(e,s);return Object(o.b)(p,Object(r.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("img",{src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/managing-events-apis-script-banner-10-27-22.jpg",alt:"banner"}),Object(o.b)("span",{id:"place1"}),Object(o.b)("details",null,Object(o.b)("summary",null,"Introduction"),Object(o.b)("br",null),Object(o.b)("p",null,"It’s becoming increasingly common to need to expose data both synchronously, using APIs, and asynchronously, using events. This enables us to cater to the unique needs and characteristics of the different consumers of the data. Some consumers need to retrieve or change the data at will - and will therefore require APIs. Others are more focused on just being notified of changes in the data in a timely manner, which is a good use case for events. Even a single consumer may need to retrieve data in different styles for different scenarios. As a data provider, however, you shouldn’t need two separate systems to achieve this. In this demo we’ll look at how events can be shared and governed in the same way as APIs."),Object(o.b)("br",null),Object(o.b)("p",null,"The scenario focuses on an airline’s flight information system that makes data available over an API to airport displays such as ‘FlightBoards’ showing departures and arrival times. The airline also makes this data available to other applications via API management. In our example, we will look at an airline mobile app currently using the flight information API. It has an opportunity to commercialize flight-delay events as part of a co-marketing agreement with a major restaurant in the airport. However, it can only do this if it can receive the events in real-time. We will show how Apache Kafka events can also be surfaced in the same catalogue as the APIs such that they can be discovered and used by the airline mobile app."),Object(o.b)("br",null),Object(o.b)("p",null,"Let’s get started!"),Object(o.b)("br",null),Object(o.b)("p",null,"(Demo intro slides ",Object(o.b)("a",{href:"https://ibm.box.com/s/9bzas80jz80s3xechdl642ag80f4qjuz",target:"_blank",rel:"noreferrer"},"here"),")"),Object(o.b)("br",null),Object(o.b)("p",null,"(Printer-ready PDF of demo script ",Object(o.b)("a",{href:"https://ibm.box.com/s/6siayii6qbus0v8m5pi293ntgphzbwh7",target:"_blank",rel:"noreferrer"},"here"),")"),Object(o.b)("br",null)),Object(o.b)("details",null,Object(o.b)("summary",null,"1 - Existing API-driven information system - without events"),Object(o.b)("br",null),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"1.1")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Explore the Flight Information Manager UI")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Let’s first take a look at the flight information system itself so we understand the data we’re dealing with. The user interface for the flight information system is known as the Flight Information Manager. It shows us the current flights, and also provides us with a mechanism to add a delay to the anticipated departure time of a flight.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.1.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Show the FlightBoard Manager UI. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-1-1.png",width:500}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"The Flight Information Manager uses a REST API available on the Flight Information Data Store. This API is only directly available to the Flight Information Manager user interface since it has the ability to perform sensitive functions, such as displaying the delayed arrival time of a flight.")))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"1.2")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Explore the existing REST API")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"There are other systems, such as the FlightBoards around the airport that also need access to flight data but do not need access to the whole API. For example, the FlightBoard should not have access to the API function to ‘delay’ a flight. An API management capability (IBM API Connect) is used to expose selected data and functions from the API in a Developer Portal. The developers of other applications can browse the various APIs available at the airport, and self-subscribe to use them in their applications. This means that their usage of the API can be tracked, controlled (e.g. rate limited) and indeed revoked. Let’s take a quick look at the exposed REST API for flight information.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Go to the API management Portal and show the exposed REST API for flight information, noting that there is only a GET operation.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"Show the IBM API Connect ",Object(o.b)("strong",{parentName:"td"},"Developer Portal")," tab in the browser. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-2-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"API Products"),". ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-2-3.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.4"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Flight API"),". ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-2-4.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.5"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Flight API 1.0.0"),". ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-2-5.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.2.6"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click the ",Object(o.b)("strong",{parentName:"td"},"GET /flights")," operation. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-2-6.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Note that we’ve been able to explore this API right down to what operations are available, and even example data that would be returned. However, we cannot make calls on this API because we have not yet requested access to it. API Connect ensures only known consumers of the API can use it.")))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"1.3")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Display the FlightBoard")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"The FlightBoard is one of the consumers of this flight information API. It retrieves the data every five minutes to get the latest flight information. "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.3.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Bring up the FlightBoard UI. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-3-1.png",width:500}))))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"1.4")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Explore the update rate of the FlightBoard")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Note that if we delay a flight using the Flight Information Manager, although it shows the new time immediately in that user interface, the FlightBoard only picks up the change when it next polls the API, several minutes later.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.4.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Show both FlightBoard (ie, the display in the airport, shown on the left) and the Flight Information Manager (ie, the master flight information record, shown on the right) on screen at the same time. Both screens are showing the same information for now.",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-4-1.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.4.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"On the Flight Information Manager, click on one of the ",Object(o.b)("strong",{parentName:"td"},"Delay this flight")," (1) buttons, enter ",Object(o.b)("strong",{parentName:"td"},"60")," (2) for the minutes to be delayed, and click ",Object(o.b)("strong",{parentName:"td"},"OK")," (3).",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-4-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.4.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Show that the flight departure time has been updated on the Flight Information Manager only (you may need to refresh the browser).",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-1-4-3.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 1.4.4"),Object(o.b)("td",{parentName:"tr",align:"left"},"Remember that the board updates every five minutes. If required, wait to show that FlightBoard is updated.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Clearly, we could reduce the poll interval to something that might be more responsive, but as we reduce this interval, we are increasing the load on the Flight Information Data Store. Note that there could be many other systems also requiring this information in a timely fashion (eg., taxi companies, ground crew systems, airlines). If they were all to poll with short time intervals, the Flight Information Data Store would quickly become overwhelmed. The Flight Information Data Store could of course implement performance measures such as caching, but it would end up having to cater to constantly increasing demands of consumers, in terms of both performance, and availability. ",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(m,{mdxType:"InlineNotification"},"This is a good time to discuss how common this situation is across scenarios in other industries. APIs are a commonly used way to provide data, but do not make it easy to receive data changes in a timely way. Examples might include fraudulent payment attempts, exceptional stock price movements, fire or other hazard alerts, refrigerator temperature thresholds etc. "))))),Object(o.b)("br",null),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(o.b)("details",null,Object(o.b)("summary",null,"2 - Using events to deliver real-time information"),Object(o.b)("br",null),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"2.1")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Introduce events, Kafka, and IBM Event Streams")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Modern applications are turning to Apache Kafka to distribute information using a publish/subscribe pattern. In Kafka’s terminology, a topic is a stream of events related to the same subject. Events are published to specific Kafka topics, then consumers decide (via subscription) which topics they would like to receive events from. Publish/subscribe capabilities are certainly not new and messaging products have provided this pattern for decades. However, Apache Kafka has risen to popularity due to its ability to retain an event history, making it well suited to certain application patterns. IBM Cloud Pak for Integration provides both messaging (IBM MQ) and also a production strength implementation of Apache Kafka (IBM Event Streams). IBM Event Streams provides a Kubernetes operator that enables rapid deployment of Apache Kafka clusters, including a graphical user interface that simplifies familiarization.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 2.1.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Show the ",Object(o.b)("strong",{parentName:"td"},"IBM Event Streams")," tab in the browser. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-2-1-1.png",width:800}))))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"2.2")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"View events on Kafka topic")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"For the simplicity of the demo, we’ve already configured our flight information system to publish events to a Kafka topic when we delay a flight.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Topics")," (1) and then select ",Object(o.b)("strong",{parentName:"td"},"flight-delays")," (2).",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-2-2-1.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"The events already emitted will be displayed. Select the top event (1) and show this corresponds to the flight you previously delayed (2). ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-2-2-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 2.2.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Show that as you delay additional flights these display in the event stream.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Note that the events for each delay we create are present in the event history, and there is a very clear representation of their sequential order based on the ‘Offset’ value. These will remain here, regardless of whether subscribers read them or not, and this is one of the key differences between Apache Kafka and messaging capabilities such as IBM MQ. Events can only be removed administratively, either by archiving those older than a certain time period, or a more sophisticated mechanism known as ‘log compaction’ which is useful when at least one event for each data record must be preserved.")))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"2.3")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Connect an application to the Kafka cluster")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Applications consuming events from a Kafka cluster need to know the location of the bootstrap Kafka broker for initiation of their connection. You will notice that that IBM Event Streams only provides ‘internal’ connections. That means you can only connect from within the OpenShift cluster. This connection can be used, for example, by the flight information system to publish events.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 2.3.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Connect to this topic"),".",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-2-3-1.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 2.3.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Internal (1)")," (1), then save the ",Object(o.b)("strong",{parentName:"td"},"endpoint information")," (2) as the Kafka listener URL. We will use this later when configuring IBM Event Endpoint Manager. Note that we do not need to download any certificates because the demo Kafka cluster has security switched off for simplicity. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-2-3-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"The consumers ​of flight delay events (​such as the FlightBoard and later, the airline mobile application) will be external to the OpenShift cluster. We ​could do basic external exposure by configuring an ‘external’ listener ​in the screens we’ve just explored, but this provides only limited control when we are exposing Kafka to consumers beyond our immediate sphere. We are going to look at a much more powerful way of exposing a topic, using IBM Event Endpoint Manager. Since this is in the same OpenShift cluster as this Kafka cluster, the internal listener will be sufficient as IBM Event Endpoint Manager will do the external exposure for us, then route to the internal connection.")))),Object(o.b)("br",null),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(o.b)("details",null,Object(o.b)("summary",null,"3 - Making events available to external consumers"),Object(o.b)("br",null),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"3.1")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Manage the Async API")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"IBM Event Endpoint Manager performs exactly the same role for asynchronous interfaces as IBM API Connect does for synchronous APIs. It allows us, for example, to make a selection of Kafka topics available in a catalogue and display them in a portal such that a developer can easily discover and subscribe to use them. It then protects the actual Kafka cluster by controlling access to it via a gateway. Let’s add our Kafka topic to the IBM Event Endpoint Manager catalogue.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Open the Cloud Pak for Integration Platform Navigator tab and click ",Object(o.b)("strong",{parentName:"td"},"Design APIs"),".",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-1.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Develop APIs and products"),".",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Select ",Object(o.b)("strong",{parentName:"td"},"Add")," (1) in the top right, and select ",Object(o.b)("strong",{parentName:"td"},"AsyncAPI (from Kafka topic)")," (2). ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-3.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.4"),Object(o.b)("td",{parentName:"tr",align:"left"},"Enter ",Object(o.b)("strong",{parentName:"td"},"Flight Delays")," in the ",Object(o.b)("strong",{parentName:"td"},"Title field"),".",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-4.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"IBM Event Endpoint Management can provide access to topics on multiple Kafka clusters via a single ‘event gateway’. Consumers therefore only have to connect to one bootstrap server (the event gateway) with one set of credentials regardless of which Kafka cluster their topics reside on. ",Object(o.b)("br",null),Object(o.b)("br",null),"As we add the topic to the catalogue for external exposure, we also choose to provide a schema for the event data. This ensures that all consumers of the events know what data model to expect from this topic.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.5"),Object(o.b)("td",{parentName:"tr",align:"left"},"Enter the Kafka listener URL from the earlier step in the ",Object(o.b)("strong",{parentName:"td"},"Bootstrap servers")," field (1) in the Servers section. In the Channel field, enter the ",Object(o.b)("strong",{parentName:"td"},"Topic")," name ",Object(o.b)("strong",{parentName:"td"},"flight-delays")," (2). Upload the ",Object(o.b)("strong",{parentName:"td"},"Flight-Delay.avsc")," (3) schema, that was previously downloaded from ",Object(o.b)("a",{href:"https://raw.githubusercontent.com/IBM/platinum-demo-code-eem/main/resources/Flight-Delays.avsc",target:"_blank"},"here")," during the Preparation steps. Click ",Object(o.b)("strong",{parentName:"td"},"Next")," (4).",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-5.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"We will choose to publish the topic straight away, which will automatically create a Product and publish that within the Sandbox catalog. By default it will secure the topic in the same way we would a synchronous API, using an API Key and Secret. This enables us to hide what might be a more complex security model used on your Kafka cluster (such as mTLS). Note that AsyncAPIs exposed by the event gateway are always protected with TLS communication, even if the underlying Kafka broker is not, as is the case in this demo.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.6"),Object(o.b)("td",{parentName:"tr",align:"left"},"Check ",Object(o.b)("strong",{parentName:"td"},"Publish this API")," (1) and click ",Object(o.b)("strong",{parentName:"td"},"Next")," (2).",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-6.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"The next page shows the API Key and Secret that are needed to access the Async API from your Kafka consumer. These will take the place of the username and password in your consumer properties.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.7"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Edit API")," to continue.",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-7.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"The next page is where you can enter a vast array of optional detail about the API, that will ultimately be published to the catalog. However, we do not need to add any further details at this stage.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 3.1.8"),Object(o.b)("td",{parentName:"tr",align:"left"},"The next screen is the Edit API screen, but you do not need to do anything here. Simply ensure that the ",Object(o.b)("strong",{parentName:"td"},"online switch")," is green, indicating the API is online. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-3-1-8.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Managing granular access to topics would normally require a Kafka administrator to create and maintain multiple access control lists (ACLs). IBM Event Endpoint Manager enables consumers to self-administer their own access to topics. The Kafka administrator need only set up access between the Kafka cluster and the event gateway. From that point onward, the person deciding which topics the consumers can subscribe to no longer needs to be a Kafka specialist.")))),Object(o.b)("br",null),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(o.b)("details",null,Object(o.b)("summary",null,"4 - Consuming real-time events in an application"),Object(o.b)("br",null),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"4.1")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Discover the AsyncAPI from an app developer’s perspective")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Let’s get back to our airport scenario. There is a restaurant at the airport that is struggling to fill its tables. They have discovered that the first thing people do when their plane is badly delayed is to go find somewhere to eat, so they see this as an excellent marketing opportunity. They are prepared to invest in advertising, but it needs to be extremely timely if it’s going to capture this particular opportunity as people make decisions within seconds when they see their flight delayed. They need to get a notification to customers immediately, perhaps before the delay is even posted on the departure boards. They negotiate with the airline asking if they can place an advert on the mobile application alongside the delay notification, but they are only prepared to pay for an advert if it is delivered within a handful of seconds of the delay being published by the flight information system. ",Object(o.b)("br",null),Object(o.b)("br",null),"The developers of the airline app investigate the design of the current delay notification in their app. It uses an API to retrieve flight delays from the flight information system, but the API only polls once every five minutes, to avoid undue pressure on the back end database. They come to the Portal to see if there are alternative ways to find out about delays. They find the REST API for flight information that they’re currently using. They then discover there is also an AsyncAPI for ‘Flight Delays’ which would enable them to be immediately notified, so they explore how they could incorporate retrieving events from Kafka into their mobile application.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.1.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Go to the API Connect Developer Portal tab and click on ",Object(o.b)("strong",{parentName:"td"},"API Products"),". Note that if you are already on the API Products page, you may need to refresh the browser page as you just added a new AsyncAPI product. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-1-1.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.1.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"Explain the two entries, as highlighted in the narration above. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-1-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Note that APIs are gathered together into ‘Products’. You could gather multiple topics under one Product, and they could even originate from different Kafka clusters. Access is then defined at the Product level, so you can easily subscribe to a whole suite of events or APIs in one go. Simple products are automatically created for development purposes and that’s what we will use in this demonstration.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.1.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Flight Delays auto product")," (the automatically-generated product we created earlier).",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-1-3.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.1.4"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Flight Delays"),".",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-1-4.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"This next page will show documentation we provided when we added this API to the catalogue. From this page you will find the values needed for connectivity. Note that the bootstrap server is that of the event gateway, not that of the original Kafka cluster. You will also find some example code samples to simplify application development.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.1.5"),Object(o.b)("td",{parentName:"tr",align:"left"},"Explain the screen, as highlighted in the narration above.",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-1-5.png",width:800}))))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"4.2")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Subscribe to the AsyncAPI")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"From the detail we’ve found so far on the API, it looks ideal for providing the notifications for our restaurant mobile app, so we decide to collate the connection details and subscribe to the AsyncAPI. Just to reinforce what’s happening here – these are the connection details to the event gateway provided by IBM Event Endpoint Management, not to the actual underlying Kafka cluster. However, the event gateway ‘looks’ just like a Kafka cluster to the consuming application.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click the arrow next to flight delays in the overview on the left, then select ",Object(o.b)("strong",{parentName:"td"},"Subscribe (operation)"),". ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-1.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"Scroll down on the right hand side to the ",Object(o.b)("strong",{parentName:"td"},"Properties")," section (1) and save the ",Object(o.b)("strong",{parentName:"td"},"client.id")," and ",Object(o.b)("strong",{parentName:"td"},"bootstrap.servers")," (2). ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-2.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Get access")," in the top left. If for any reason you are not logged into the Portal, this is the point at which you will be forced to log in. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-3.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"Products are made available to subscribers through ‘Plans’. This gives us the opportunity to have different policies depending on the plan that is chosen. If APIs are monetized APIs, each plan might have a different cost, or some plans might be only available to selected user groups.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.4"),Object(o.b)("td",{parentName:"tr",align:"left"},"Select the ",Object(o.b)("strong",{parentName:"td"},"Default")," pricing plan to continue. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-4.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"As a developer, you may be writing several applications, each using different APIs. From a security perspective you might not want all applications you work with to have access to all of the APIs that you have subscribed to. For this reason, you can create an ‘Application’ within IBM Event Endpoint Manager for each of your applications, and individually subscribe them only to the Plans on the Products they need. Each application will get its own unique Key and Secret such that it can be identified when attempting to access the APIs.",Object(o.b)("br",null),Object(o.b)("br",null),"At this point you will need to create an ‘Application’ in the portal. This is simply an identity or set of credentials that your actual application will use.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.5"),Object(o.b)("td",{parentName:"tr",align:"left"},"Click ",Object(o.b)("strong",{parentName:"td"},"Create Application")," on the right.",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-5.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.6"),Object(o.b)("td",{parentName:"tr",align:"left"},"Name the application ",Object(o.b)("strong",{parentName:"td"},"Ground Crew App")," (1) and click ",Object(o.b)("strong",{parentName:"td"},"Save")," (2). ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-6.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.7"),Object(o.b)("td",{parentName:"tr",align:"left"},"You will now see a dialog showing the ",Object(o.b)("strong",{parentName:"td"},"Key")," and ",Object(o.b)("strong",{parentName:"td"},"Secret")," for this application to access the API. ",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(m,{mdxType:"InlineNotification"},"It is very important that you save these, as they cannot be retrieved later. "),Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-7.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.8"),Object(o.b)("td",{parentName:"tr",align:"left"},"Close this dialog then select your newly created application on the left. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-8.png",width:800}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.2.9"),Object(o.b)("td",{parentName:"tr",align:"left"},"Review the details then click ",Object(o.b)("strong",{parentName:"td"},"Next"),". Your subscription will be complete. ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-2-9.png",width:800}))))),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"4.3")),Object(o.b)("th",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"th"},"Consume the events")))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"We now have all the credentials we need for our Airline App to subscribe to the Kafka topic via IBM Event Endpoint Manager’s gateway. All we need now is an application to consume the events. We’re not going to create the actual airline mobile app. We’re just going to give you an example, built using the sample code from the Portal, for what the server side of the mobile application would be doing in order to pick up the events. ",Object(o.b)("br",null),Object(o.b)("br",null),"Recall that the IBM Event Endpoint Manager gateway always enforces TLS encryption on external requests, so our consumer will need to have a copy of the gateway’s public TLS certificate. We will download this certificate and store it somewhere that the consuming application can retrieve at runtime.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.3.1"),Object(o.b)("td",{parentName:"tr",align:"left"},"Install the server certificate from the event gateway endpoint ready for the client application. There is a script to do this:",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("code",null,"./install-certificate.sh"),Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-1.png",width:500}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"The example in our demo is simply a java consumer that simulates the way the Airline App would receive Kafka events, such that we can see them arriving in real time.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.3.2"),Object(o.b)("td",{parentName:"tr",align:"left"},"The script that runs the consumer code itself is called ./setup-client-app.sh and is one of the files you downloaded in the beginning. This takes five arguments: ",Object(o.b)("br",null),Object(o.b)("br",null)," 1) ",Object(o.b)("strong",{parentName:"td"},"Target Namespace:")," this is normally cp4i ",Object(o.b)("br",null),Object(o.b)("br",null),"2) ",Object(o.b)("strong",{parentName:"td"},"Kafka Client Id:")," this is retrieved from the Developer Portal in the properties section",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-2-clientid.png",width:800})," ",Object(o.b)("br",null),"3) ",Object(o.b)("strong",{parentName:"td"},"Gateway Username:")," this is the API ",Object(o.b)("strong",{parentName:"td"},"Key")," that you copied in this step.",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-2-apikey.png",width:800})," ",Object(o.b)("br",null),"4) ",Object(o.b)("strong",{parentName:"td"},"Gateway Password:")," this is the API ",Object(o.b)("strong",{parentName:"td"},"Secret")," also shown in the screenshot above.",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-2-apisecret.png",width:800}),Object(o.b)("br",null),Object(o.b)("br",null),"5) ",Object(o.b)("strong",{parentName:"td"},"Flight Number:")," this is the flight number you want to monitor. This needs to be within quotes, e.g. “EZY 6005”")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.3.3"),Object(o.b)("td",{parentName:"tr",align:"left"},"Run the following command, replacing each of the parameters:",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("strong",{parentName:"td"},"./setup-client-app.sh ","<","TargetNamespace",">"," ","<","KafkaClientId",">"," ","<","GatewayUsername",">"," ","<","GatewayPassword",">"," ","<","FlightNumber",">"),Object(o.b)("br",null),Object(o.b)("br",null),"Here is an example. Remember, this needs to be customized with your own values for each of the parameters:",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("strong",{parentName:"td"},"./setup-client-app.sh cp4i 64a66394-84dd-4b8b-b78c-202e24125632 8515b170f10b6937c4ba89f1c6eaf325 746f7e1f89415723d00366acd0574410 “EZY 6005”")," ",Object(o.b)("br",null),Object(o.b)("br",null),"This will automatically build a container and run it on Red Hat OpenShift. ",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(m,{mdxType:"InlineNotification"},"Pick any flight in the FlightBoard Manager UI. When entering the flight number, be sure to type the quotation marks directly in your Terminal window. Copying and pasting from another text editor may result in no delays being reported."))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.3.4"),Object(o.b)("td",{parentName:"tr",align:"left"},"In the Flight Information Manager, click the button to delay the flight you entered in the previous step. Enter ",Object(o.b)("strong",{parentName:"td"},"180")," minutes (1), then click ",Object(o.b)("strong",{parentName:"td"},"OK")," (2). ",Object(o.b)("br",null),Object(o.b)("br",null)," ",Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-4.png",width:500})," ",Object(o.b)("br",null))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Action")," "," "," 4.3.5"),Object(o.b)("td",{parentName:"tr",align:"left"},"Now return to the terminal window where the script was run, and you will see a message. ",Object(o.b)("br",null),Object(o.b)("br",null),"“Your flight EZY 6005 has been delayed by 180 minutes. You can eat at ACME Restaurant and get a 10% discount! Would you like to book a table before the others on your plane take them all?” ",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-5.png",width:500}),Object(o.b)("br",null))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("strong",{parentName:"td"},"Narration")),Object(o.b)("td",{parentName:"tr",align:"left"},"We see the following message, which of course in real life would appear on the airline mobile app alongside the delay notification.",Object(o.b)("br",null),Object(o.b)("br",null),"“Your flight EZY 6005 has been delayed by 180 minutes. You can eat at ACME Restaurant and get a 10% discount! Would you like to book a table before the others on your plane take them all?”",Object(o.b)("br",null),Object(o.b)("br",null),"Notice that it takes a while before the FlightBoard shows the delay, since it is still using API polling to get flight information. ",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)("img",{parentName:"td",src:"https://raw.githubusercontent.com/ibm-garage-tsa/platinum-demos/master/src/pages/300-integration-managing-events-and-apis-from-unified-environment/images/300-eem-demo-4-3-5b.png",width:800}),Object(o.b)("br",null))))),Object(o.b)("br",null),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))),Object(o.b)("details",null,Object(o.b)("summary",null,"Summary"),Object(o.b)("br",null),Object(o.b)("p",null,"In the demo we saw an example of a use case that was better served by listening to Kafka events than by polling synchronous APIs. We were able to react instantly to an event happening rather than wait a full polling interval. Furthermore, we did that without putting any additional load on the back-end system, as the Kafka stream provided full decoupling and is completely independent of the flight delay information. It is clear that there are many advantages to exposing a back end’s capabilities not just using a synchronous API, but also with a source of events. Even a single consumer is likely to need to retrieve data in different styles for different scenarios."),Object(o.b)("br",null),Object(o.b)("p",null,"A key focus of the demo was to show how events could be shared, and governed in the same way as APIs, extending API management into event endpoint management. The topics were discoverable in a catalogue from which the consumer could self-subscribe to receive events. Access to the events was then securely exposed using IBM’s unique event gateway that transparently routes the Kafka protocol to the underlying Kafka brokers."),Object(o.b)("br",null),Object(o.b)("p",null,"Thank you for attending today’s presentation."),Object(o.b)("br",null),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"#place1"},"Go to top")))))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-300-integration-managing-events-and-apis-from-unified-environment-demo-script-mdx-4f0d0740d527218e7b09.js.map